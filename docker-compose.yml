version: "3.8"

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    container_name: api
    ports:
      - "4000:4000"
    expose:
      - "4000"
    env_file:
      - .env
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - TS_NODE_PROJECT=tsconfig.dev.json

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend
    ports:
      - "3000:3000"
    expose:
      - "3000"
    env_file:
      - .env
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=3000
      - NEXT_TELEMETRY_DISABLED=1
      - NODE_OPTIONS=--max_old_space_size=8192
    depends_on:
      - api

  postgres:
    image: "postgres:alpine"
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - "db-data:/var/lib/postgresql/data"
    expose:
      - "5432"
    ports:
      - "5432:5432"

volumes:
  db-data:
