version: "3.8"

services:
  api:
    build:
      context: ./api
      dockerfile: ../Dockerfile.dev
    container_name: api
    ports:
      - "4000:4000"
    expose:
      - "4000"
    env_file:
      - .env
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    depends_on:
      - postgres
      - iframely
      - imageflow
    environment:
      - NODE_ENV=development
      - TS_NODE_PROJECT=tsconfig.dev.json

  frontend:
    build:
      context: ./frontend
      dockerfile: ../Dockerfile.dev
    container_name: frontend
    ports:
      - "3000:3000"
    expose:
      - "3000"
    env_file: 
      - .env
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.nuxt
    environment:
      - NODE_ENV=development
    depends_on:
      - api

  redis:
    image: "redis:alpine"
    container_name: redis
    expose:
      - "6379"

  iframely:
    build: "https://github.com/itteco/iframely.git"
    container_name: iframely
    ports:
      - "8061:8061"
    expose:
      - "8061"
    volumes:
      - ./iframely.config.js:/iframely/config.local.js
    depends_on:
      - redis

  imageflow:
    build: ./imageflow
    container_name: imageflow
    ports:
      - "12345:12345"
    expose:
      - "12345"
    env_file:
      - .env

  postgres:
    image: "postgres:alpine"
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - "db-data:/var/lib/postgresql/data"
    expose:
      - "5432"
    ports:
      - "5432:5432"

volumes:
  db-data:
