import {
  fromPromise$1
} from "./chunk.L3G5PU7U.js";
import {
  x
} from "./chunk.I2JUFTQN.js";
import {
  createRequest,
  fromValue$1,
  makeSubject$1,
  map$1,
  onStart$1
} from "./chunk.QDKH3HXJ.js";
import {
  take$1,
  toPromise$1,
  u
} from "./chunk.U6CQNBPC.js";
import {
  D,
  filter$1,
  merge$1,
  share$1,
  takeUntil$1
} from "./chunk.2QC3HF4U.js";
import "./chunk.ZKDFWQVH.js";
import "./chunk.WZSZG6XK.js";
import "./chunk.K5PCYWJY.js";
import "./chunk.BROQQF2P.js";
import "./chunk.FNFVRXQK.js";
import "./chunk.5OSL2VXB.js";
import {
  __name
} from "./chunk.C4F35LU4.js";

// ../.yarn/$$virtual/@urql-exchange-auth-virtual-38fbfd2ce7/0/cache/@urql-exchange-auth-npm-0.1.2-9fdd44464c-d9c0c43ab9.zip/node_modules/@urql/exchange-auth/dist/urql-exchange-auth.mjs
function h() {
  return (h = Object.assign || function(a) {
    var b, d, e;
    for (b = 1; b < arguments.length; b++) {
      d = arguments[b];
      for (e in d) {
        Object.prototype.hasOwnProperty.call(d, e) && (a[e] = d[e]);
      }
    }
    return a;
  }).apply(this, arguments);
}
__name(h, "h");
function k(a, b) {
  return x(a.kind, a, h({}, a.context, {
    authAttempt: b
  }));
}
__name(k, "k");
function v(a) {
  return a.kind === "teardown";
}
__name(v, "v");
function w(a) {
  return a.kind !== "teardown";
}
__name(w, "w");
function authExchange(a) {
  var b = a.addAuthToOperation, d = a.getAuth, e = a.didAuthError, q = a.willAuthError;
  return function(a2) {
    function x2(a3) {
      return b({
        operation: a3,
        authState: f
      });
    }
    __name(x2, "x");
    var A, r, f, y = a2.client, z = a2.forward, l = new Map();
    a2 = makeSubject$1();
    A = a2.source, r = a2.next, f = null;
    return function(a3) {
      function b2(a4) {
        a4 = k(a4, true);
        l.set(a4.key, a4);
        c || (c = d({
          authState: f,
          mutate: t
        }).then(m).catch(B));
        return c;
      }
      __name(b2, "b");
      function m(a4) {
        f = a4;
        c = void 0;
        l.forEach(r);
        l.clear();
      }
      __name(m, "m");
      function t(a4, b3, c2) {
        var g = y.createRequestOperation("mutation", createRequest(a4, b3), c2);
        return toPromise$1(take$1(1)(filter$1(function(a5) {
          return a5.operation.key === g.key;
        })(onStart$1(function() {
          return r(g);
        })(u2))));
      }
      __name(t, "t");
      function B() {
        return m(null);
      }
      __name(B, "B");
      var p, u2, c = Promise.resolve().then(function() {
        return d({
          authState: f,
          mutate: t
        });
      }).then(m), n = share$1(a3);
      a3 = filter$1(v)(n);
      p = filter$1(w)(n);
      p = map$1(x2)(merge$1([A, D(function(a4) {
        if (!c && q && q({
          operation: a4,
          authState: f
        })) {
          return c = b2(a4), u;
        }
        if (!c) {
          return fromValue$1(k(a4, false));
        }
        var g = filter$1(function(b3) {
          return b3.kind === "teardown" && b3.key === a4.key;
        })(n);
        return takeUntil$1(g)(map$1(function() {
          return k(a4, false);
        })(fromPromise$1(c)));
      })(p)]));
      u2 = share$1(z(merge$1([p, a3])));
      return filter$1(function(a4) {
        var d2 = a4.error;
        a4 = a4.operation;
        return d2 && e && e({
          error: d2,
          authState: f
        }) && !a4.context.authAttempt ? (c = b2(a4), false) : true;
      })(u2);
    };
  };
}
__name(authExchange, "authExchange");
export {
  authExchange
};
//# sourceMappingURL=@urql_exchange-auth.js.map
