import {
  b
} from "./chunk.PZI7Q53A.js";
import "./chunk.I2JUFTQN.js";
import "./chunk.QDKH3HXJ.js";
import "./chunk.U6CQNBPC.js";
import {
  u
} from "./chunk.2QC3HF4U.js";
import "./chunk.ZKDFWQVH.js";
import "./chunk.WZSZG6XK.js";
import "./chunk.K5PCYWJY.js";
import "./chunk.BROQQF2P.js";
import "./chunk.FNFVRXQK.js";
import "./chunk.5OSL2VXB.js";
import {
  __name
} from "./chunk.C4F35LU4.js";

// ../.yarn/$$virtual/@urql-exchange-graphcache-virtual-a4882eba46/0/cache/@urql-exchange-graphcache-npm-4.0.0-e567eac736-21175dba85.zip/node_modules/@urql/exchange-graphcache/dist/urql-exchange-graphcache-extras.mjs
function t(a) {
  return typeof a == "string" ? a : null;
}
__name(t, "t");
function v(a, e, g) {
  var c, b2, d, l, p;
  for (c = new Set(), b2 = 0, d = e.length; b2 < d; b2++) {
    typeof (l = a.resolve(e[b2], "node")) == "string" && c.add(l);
  }
  e = e.slice();
  b2 = 0;
  for (d = g.length; b2 < d; b2++) {
    typeof (p = a.resolve(l = g[b2], "node")) != "string" || c.has(p) || (c.add(p), e.push(l));
  }
  return e;
}
__name(v, "v");
function C(a, e) {
  var g, c, b2, d;
  for (g = new Set(), c = 0, b2 = a.length; c < b2; c++) {
    typeof (d = a[c]) == "string" && g.add(d);
  }
  a = a.slice();
  c = 0;
  for (b2 = e.length; c < b2; c++) {
    typeof (d = e[c]) != "string" || g.has(d) || (g.add(d), a.push(d));
  }
  return a;
}
__name(C, "C");
function D(a, e) {
  var g, c, b2, d;
  for (g in e) {
    if (g !== "first" && g !== "last" && g !== "after" && g !== "before") {
      if (!(g in a)) {
        return false;
      }
      if (typeof (c = a[g]) != typeof (b2 = e[g]) || typeof c != "object" ? c !== b2 : u(c) !== u(b2)) {
        return false;
      }
    }
  }
  for (d in a) {
    if (d !== "first" && d !== "last" && d !== "after" && d !== "before" && !(d in e)) {
      return false;
    }
  }
  return true;
}
__name(D, "D");
function E(a, e, g) {
  var b2, d, l, p, c = t(a.resolve(e, g));
  if (!c) {
    return null;
  }
  g = a.resolve(c, "__typename");
  e = a.resolve(c, "edges") || [];
  b2 = a.resolve(c, "nodes") || [];
  if (typeof g != "string") {
    return null;
  }
  g = {
    __typename: g,
    edges: e,
    nodes: b2,
    pageInfo: r
  };
  if (typeof (d = a.resolve(c, "pageInfo")) == "string") {
    c = t(a.resolve(d, "__typename"));
    b2 = t(a.resolve(d, "endCursor"));
    l = t(a.resolve(d, "startCursor")), p = a.resolve(d, "hasNextPage");
    d = a.resolve(d, "hasPreviousPage");
    (c = g.pageInfo = {
      __typename: typeof c == "string" ? c : "PageInfo",
      hasNextPage: typeof p == "boolean" ? p : !!b2,
      hasPreviousPage: typeof d == "boolean" ? d : !!l,
      endCursor: b2,
      startCursor: l
    }).endCursor === null && (b2 = e[e.length - 1]) && (b2 = a.resolve(b2, "cursor"), c.endCursor = t(b2));
    c.startCursor === null && (e = e[0]) && (a = a.resolve(e, "cursor"), c.startCursor = t(a));
  }
  return g;
}
__name(E, "E");
function relayPagination(a) {
  a === void 0 && (a = {});
  var e = a.mergeMode || "inwards";
  return function(a2, c, b2, d) {
    var g, p, w, A, m, u2, q, n, k, x, h, f, y, z;
    g = d.fieldName;
    if ((w = (p = b2.inspectFields(a2 = d.parentKey).filter(function(a3) {
      return a3.fieldName === g;
    })).length) !== 0) {
      for (A = null, m = [], u2 = [], q = [], n = [], k = b({}, r), x = 0; x < w; x++) {
        f = (h = p[x]).fieldKey;
        if ((h = h.arguments) !== null && D(c, h) && (f = E(b2, a2, f)) !== null) {
          if (e === "inwards" && typeof h.last == "number" && typeof h.first == "number") {
            k = f.edges.slice(0, h.first + 1);
            y = f.edges.slice(-h.last), z = f.nodes.slice(0, h.first + 1);
            h = f.nodes.slice(-h.last);
            m = v(b2, m, k);
            u2 = v(b2, y, u2);
            q = C(q, z);
            n = C(h, n);
            k = f.pageInfo;
          } else {
            h.after ? (m = v(b2, m, f.edges), q = C(q, f.nodes), k.endCursor = f.pageInfo.endCursor, k.hasNextPage = f.pageInfo.hasNextPage) : h.before ? (u2 = v(b2, f.edges, u2), n = C(f.nodes, n), k.startCursor = f.pageInfo.startCursor, k.hasPreviousPage = f.pageInfo.hasPreviousPage) : (typeof h.last == "number" ? (u2 = v(b2, f.edges, u2), n = C(f.nodes, n)) : (m = v(b2, m, f.edges), q = C(q, f.nodes)), k = f.pageInfo);
          }
          f.pageInfo.__typename !== k.__typename && (k.__typename = f.pageInfo.__typename);
          A !== f.__typename && (A = f.__typename);
        }
      }
      if (typeof A == "string") {
        if (!t(b2.resolve(a2, g, c))) {
          if (d.store.schema) {
            d.partial = true;
          } else {
            return;
          }
        }
        return {
          __typename: A,
          edges: e === "inwards" ? v(b2, m, u2) : v(b2, u2, m),
          nodes: e === "inwards" ? C(q, n) : C(n, q),
          pageInfo: {
            __typename: k.__typename,
            endCursor: k.endCursor,
            startCursor: k.startCursor,
            hasNextPage: k.hasNextPage,
            hasPreviousPage: k.hasPreviousPage
          }
        };
      }
    }
  };
}
__name(relayPagination, "relayPagination");
function simplePagination(a) {
  function e(a2, b3) {
    var d, e2, l, m;
    for (d in b3) {
      if (d !== g && d !== c) {
        if (!(d in a2)) {
          return false;
        }
        if (typeof (e2 = a2[d]) != typeof (l = b3[d]) || typeof e2 != "object" ? e2 !== l : u(e2) !== u(l)) {
          return false;
        }
      }
    }
    for (m in a2) {
      if (m !== g && m !== c && !(m in b3)) {
        return false;
      }
    }
    return true;
  }
  __name(e, "e");
  var g, c, b2;
  a === void 0 && (a = {});
  (g = a.offsetArgument) === void 0 && (g = "skip");
  (c = a.limitArgument) === void 0 && (c = "limit");
  (b2 = a.mergeMode) === void 0 && (b2 = "after");
  return function(a2, c2, p, w) {
    var d, m, l, q, n, k, x, h, f, y, z, B;
    d = w.fieldName;
    if ((l = (m = p.inspectFields(a2 = w.parentKey).filter(function(a3) {
      return a3.fieldName === d;
    })).length) !== 0) {
      for (q = new Set(), n = [], k = null, x = 0; x < l; x++) {
        f = (h = m[x]).fieldKey;
        if ((h = h.arguments) !== null && e(c2, h) && (f = p.resolve(a2, f), h = h[g], f !== null && f.length !== 0 && typeof h == "number")) {
          for (y = [], z = 0; z < f.length; z++) {
            q.has(B = f[z]) || (y.push(B), q.add(B));
          }
          n = (!k || h > k) == (b2 === "after") ? n.concat(y) : y.concat(n);
          k = h;
        }
      }
      if (p.resolve(a2, d, c2)) {
        return n;
      }
      if (w.store.schema) {
        return w.partial = true, n;
      }
    }
  };
}
__name(simplePagination, "simplePagination");
var r = {
  __typename: "PageInfo",
  endCursor: null,
  startCursor: null,
  hasNextPage: false,
  hasPreviousPage: false
};
export {
  relayPagination,
  simplePagination
};
//# sourceMappingURL=@urql_exchange-graphcache_extras.js.map
