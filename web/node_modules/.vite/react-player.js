import {
  require_prop_types
} from "./chunk.GEUXASMJ.js";
import "./chunk.NQTQMCX3.js";
import {
  __export
} from "./chunk.BROQQF2P.js";
import {
  __markAsModule
} from "./chunk.FNFVRXQK.js";
import {
  require_react
} from "./chunk.BD4KNU7W.js";
import "./chunk.MXG56MB2.js";
import {
  __commonJS
} from "./chunk.5OSL2VXB.js";
import {
  __name
} from "./chunk.C4F35LU4.js";

// ../.yarn/cache/load-script-npm-1.0.0-32a3163a57-9f907ee20d.zip/node_modules/load-script/index.js
var require_load_script = __commonJS((exports, module) => {
  module.exports = /* @__PURE__ */ __name(function load(src, opts, cb) {
    var head = document.head || document.getElementsByTagName("head")[0];
    var script = document.createElement("script");
    if (typeof opts === "function") {
      cb = opts;
      opts = {};
    }
    opts = opts || {};
    cb = cb || function() {
    };
    script.type = opts.type || "text/javascript";
    script.charset = opts.charset || "utf8";
    script.async = "async" in opts ? !!opts.async : true;
    script.src = src;
    if (opts.attrs) {
      setAttributes(script, opts.attrs);
    }
    if (opts.text) {
      script.text = "" + opts.text;
    }
    var onend = "onload" in script ? stdOnEnd : ieOnEnd;
    onend(script, cb);
    if (!script.onload) {
      stdOnEnd(script, cb);
    }
    head.appendChild(script);
  }, "load");
  function setAttributes(script, attrs) {
    for (var attr in attrs) {
      script.setAttribute(attr, attrs[attr]);
    }
  }
  __name(setAttributes, "setAttributes");
  function stdOnEnd(script, cb) {
    script.onload = function() {
      this.onerror = this.onload = null;
      cb(null, script);
    };
    script.onerror = function() {
      this.onerror = this.onload = null;
      cb(new Error("Failed to load " + this.src), script);
    };
  }
  __name(stdOnEnd, "stdOnEnd");
  function ieOnEnd(script, cb) {
    script.onreadystatechange = function() {
      if (this.readyState != "complete" && this.readyState != "loaded")
        return;
      this.onreadystatechange = null;
      cb(null, script);
    };
  }
  __name(ieOnEnd, "ieOnEnd");
});

// ../.yarn/cache/deepmerge-npm-4.2.2-112165ced2-85abf8e004.zip/node_modules/deepmerge/dist/cjs.js
var require_cjs = __commonJS((exports, module) => {
  "use strict";
  var isMergeableObject = /* @__PURE__ */ __name(function isMergeableObject2(value) {
    return isNonNullObject(value) && !isSpecial(value);
  }, "isMergeableObject");
  function isNonNullObject(value) {
    return !!value && typeof value === "object";
  }
  __name(isNonNullObject, "isNonNullObject");
  function isSpecial(value) {
    var stringValue = Object.prototype.toString.call(value);
    return stringValue === "[object RegExp]" || stringValue === "[object Date]" || isReactElement(value);
  }
  __name(isSpecial, "isSpecial");
  var canUseSymbol = typeof Symbol === "function" && Symbol.for;
  var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for("react.element") : 60103;
  function isReactElement(value) {
    return value.$$typeof === REACT_ELEMENT_TYPE;
  }
  __name(isReactElement, "isReactElement");
  function emptyTarget(val) {
    return Array.isArray(val) ? [] : {};
  }
  __name(emptyTarget, "emptyTarget");
  function cloneUnlessOtherwiseSpecified(value, options) {
    return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
  }
  __name(cloneUnlessOtherwiseSpecified, "cloneUnlessOtherwiseSpecified");
  function defaultArrayMerge(target, source, options) {
    return target.concat(source).map(function(element) {
      return cloneUnlessOtherwiseSpecified(element, options);
    });
  }
  __name(defaultArrayMerge, "defaultArrayMerge");
  function getMergeFunction(key, options) {
    if (!options.customMerge) {
      return deepmerge;
    }
    var customMerge = options.customMerge(key);
    return typeof customMerge === "function" ? customMerge : deepmerge;
  }
  __name(getMergeFunction, "getMergeFunction");
  function getEnumerableOwnPropertySymbols(target) {
    return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol) {
      return target.propertyIsEnumerable(symbol);
    }) : [];
  }
  __name(getEnumerableOwnPropertySymbols, "getEnumerableOwnPropertySymbols");
  function getKeys(target) {
    return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
  }
  __name(getKeys, "getKeys");
  function propertyIsOnObject(object, property) {
    try {
      return property in object;
    } catch (_) {
      return false;
    }
  }
  __name(propertyIsOnObject, "propertyIsOnObject");
  function propertyIsUnsafe(target, key) {
    return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
  }
  __name(propertyIsUnsafe, "propertyIsUnsafe");
  function mergeObject(target, source, options) {
    var destination = {};
    if (options.isMergeableObject(target)) {
      getKeys(target).forEach(function(key) {
        destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
      });
    }
    getKeys(source).forEach(function(key) {
      if (propertyIsUnsafe(target, key)) {
        return;
      }
      if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
        destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
      } else {
        destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
      }
    });
    return destination;
  }
  __name(mergeObject, "mergeObject");
  function deepmerge(target, source, options) {
    options = options || {};
    options.arrayMerge = options.arrayMerge || defaultArrayMerge;
    options.isMergeableObject = options.isMergeableObject || isMergeableObject;
    options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
    var sourceIsArray = Array.isArray(source);
    var targetIsArray = Array.isArray(target);
    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
    if (!sourceAndTargetTypesMatch) {
      return cloneUnlessOtherwiseSpecified(source, options);
    } else if (sourceIsArray) {
      return options.arrayMerge(target, source, options);
    } else {
      return mergeObject(target, source, options);
    }
  }
  __name(deepmerge, "deepmerge");
  deepmerge.all = /* @__PURE__ */ __name(function deepmergeAll(array, options) {
    if (!Array.isArray(array)) {
      throw new Error("first argument should be an array");
    }
    return array.reduce(function(prev, next) {
      return deepmerge(prev, next, options);
    }, {});
  }, "deepmergeAll");
  var deepmerge_1 = deepmerge;
  module.exports = deepmerge_1;
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/utils.js
var require_utils = __commonJS((exports) => {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.parseStartTime = parseStartTime;
  exports.parseEndTime = parseEndTime;
  exports.randomString = randomString;
  exports.queryString = queryString;
  exports.getSDK = getSDK;
  exports.getConfig = getConfig;
  exports.omit = omit;
  exports.callPlayer = callPlayer;
  exports.isMediaStream = isMediaStream;
  exports.isBlobUrl = isBlobUrl;
  exports.supportsWebKitPresentationMode = supportsWebKitPresentationMode;
  var _loadScript = _interopRequireDefault(require_load_script());
  var _deepmerge = _interopRequireDefault(require_cjs());
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  __name(_interopRequireDefault, "_interopRequireDefault");
  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }
  __name(_slicedToArray, "_slicedToArray");
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  __name(_nonIterableRest, "_nonIterableRest");
  function _unsupportedIterableToArray(o, minLen) {
    if (!o)
      return;
    if (typeof o === "string")
      return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor)
      n = o.constructor.name;
    if (n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray(o, minLen);
  }
  __name(_unsupportedIterableToArray, "_unsupportedIterableToArray");
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length)
      len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  __name(_arrayLikeToArray, "_arrayLikeToArray");
  function _iterableToArrayLimit(arr, i) {
    if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
      return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = void 0;
    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i)
          break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null)
          _i["return"]();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
  __name(_iterableToArrayLimit, "_iterableToArrayLimit");
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr))
      return arr;
  }
  __name(_arrayWithHoles, "_arrayWithHoles");
  var MATCH_START_QUERY = /[?&#](?:start|t)=([0-9hms]+)/;
  var MATCH_END_QUERY = /[?&#]end=([0-9hms]+)/;
  var MATCH_START_STAMP = /(\d+)(h|m|s)/g;
  var MATCH_NUMERIC = /^\d+$/;
  function parseTimeParam(url, pattern) {
    if (url instanceof Array) {
      return void 0;
    }
    var match = url.match(pattern);
    if (match) {
      var stamp = match[1];
      if (stamp.match(MATCH_START_STAMP)) {
        return parseTimeString(stamp);
      }
      if (MATCH_NUMERIC.test(stamp)) {
        return parseInt(stamp);
      }
    }
    return void 0;
  }
  __name(parseTimeParam, "parseTimeParam");
  function parseTimeString(stamp) {
    var seconds = 0;
    var array = MATCH_START_STAMP.exec(stamp);
    while (array !== null) {
      var _array = array, _array2 = _slicedToArray(_array, 3), count = _array2[1], period = _array2[2];
      if (period === "h")
        seconds += parseInt(count, 10) * 60 * 60;
      if (period === "m")
        seconds += parseInt(count, 10) * 60;
      if (period === "s")
        seconds += parseInt(count, 10);
      array = MATCH_START_STAMP.exec(stamp);
    }
    return seconds;
  }
  __name(parseTimeString, "parseTimeString");
  function parseStartTime(url) {
    return parseTimeParam(url, MATCH_START_QUERY);
  }
  __name(parseStartTime, "parseStartTime");
  function parseEndTime(url) {
    return parseTimeParam(url, MATCH_END_QUERY);
  }
  __name(parseEndTime, "parseEndTime");
  function randomString() {
    return Math.random().toString(36).substr(2, 5);
  }
  __name(randomString, "randomString");
  function queryString(object) {
    return Object.keys(object).map(function(key) {
      return "".concat(key, "=").concat(object[key]);
    }).join("&");
  }
  __name(queryString, "queryString");
  function getGlobal(key) {
    if (window[key]) {
      return window[key];
    }
    if (window.exports && window.exports[key]) {
      return window.exports[key];
    }
    if (window.module && window.module.exports && window.module.exports[key]) {
      return window.module.exports[key];
    }
    return null;
  }
  __name(getGlobal, "getGlobal");
  var requests = {};
  function getSDK(url, sdkGlobal) {
    var sdkReady = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
    var isLoaded = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : function() {
      return true;
    };
    var fetchScript = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : _loadScript["default"];
    var existingGlobal = getGlobal(sdkGlobal);
    if (existingGlobal && isLoaded(existingGlobal)) {
      return Promise.resolve(existingGlobal);
    }
    return new Promise(function(resolve, reject) {
      if (requests[url]) {
        requests[url].push({
          resolve,
          reject
        });
        return;
      }
      requests[url] = [{
        resolve,
        reject
      }];
      var onLoaded = /* @__PURE__ */ __name(function onLoaded2(sdk) {
        requests[url].forEach(function(request) {
          return request.resolve(sdk);
        });
      }, "onLoaded");
      if (sdkReady) {
        var previousOnReady = window[sdkReady];
        window[sdkReady] = function() {
          if (previousOnReady)
            previousOnReady();
          onLoaded(getGlobal(sdkGlobal));
        };
      }
      fetchScript(url, function(err) {
        if (err) {
          requests[url].forEach(function(request) {
            return request.reject(err);
          });
          requests[url] = null;
        } else if (!sdkReady) {
          onLoaded(getGlobal(sdkGlobal));
        }
      });
    });
  }
  __name(getSDK, "getSDK");
  function getConfig(props, defaultProps) {
    return (0, _deepmerge["default"])(defaultProps.config, props.config);
  }
  __name(getConfig, "getConfig");
  function omit(object) {
    var _ref;
    for (var _len = arguments.length, arrays = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      arrays[_key - 1] = arguments[_key];
    }
    var omitKeys = (_ref = []).concat.apply(_ref, arrays);
    var output = {};
    var keys = Object.keys(object);
    for (var _i2 = 0, _keys = keys; _i2 < _keys.length; _i2++) {
      var key = _keys[_i2];
      if (omitKeys.indexOf(key) === -1) {
        output[key] = object[key];
      }
    }
    return output;
  }
  __name(omit, "omit");
  function callPlayer(method) {
    var _this$player;
    if (!this.player || !this.player[method]) {
      var message = "ReactPlayer: ".concat(this.constructor.displayName, " player could not call %c").concat(method, "%c \u2013 ");
      if (!this.player) {
        message += "The player was not available";
      } else if (!this.player[method]) {
        message += "The method was not available";
      }
      console.warn(message, "font-weight: bold", "");
      return null;
    }
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    return (_this$player = this.player)[method].apply(_this$player, args);
  }
  __name(callPlayer, "callPlayer");
  function isMediaStream(url) {
    return typeof window !== "undefined" && typeof window.MediaStream !== "undefined" && url instanceof window.MediaStream;
  }
  __name(isMediaStream, "isMediaStream");
  function isBlobUrl(url) {
    return /^blob:/.test(url);
  }
  __name(isBlobUrl, "isBlobUrl");
  function supportsWebKitPresentationMode() {
    var video = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : document.createElement("video");
    var notMobile = /iPhone|iPod/.test(navigator.userAgent) === false;
    return video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === "function" && notMobile;
  }
  __name(supportsWebKitPresentationMode, "supportsWebKitPresentationMode");
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/patterns.js
var require_patterns = __commonJS((exports) => {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.canPlay = exports.FLV_EXTENSIONS = exports.DASH_EXTENSIONS = exports.HLS_EXTENSIONS = exports.VIDEO_EXTENSIONS = exports.AUDIO_EXTENSIONS = exports.MATCH_URL_KALTURA = exports.MATCH_URL_VIDYARD = exports.MATCH_URL_MIXCLOUD = exports.MATCH_URL_DAILYMOTION = exports.MATCH_URL_TWITCH_CHANNEL = exports.MATCH_URL_TWITCH_VIDEO = exports.MATCH_URL_WISTIA = exports.MATCH_URL_STREAMABLE = exports.MATCH_URL_FACEBOOK_WATCH = exports.MATCH_URL_FACEBOOK = exports.MATCH_URL_VIMEO = exports.MATCH_URL_SOUNDCLOUD = exports.MATCH_URL_YOUTUBE = void 0;
  var _utils = require_utils();
  function _createForOfIteratorHelper(o, allowArrayLike) {
    var it;
    if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it)
          o = it;
        var i = 0;
        var F = /* @__PURE__ */ __name(function F2() {
        }, "F");
        return {s: F, n: /* @__PURE__ */ __name(function n() {
          if (i >= o.length)
            return {done: true};
          return {done: false, value: o[i++]};
        }, "n"), e: /* @__PURE__ */ __name(function e(_e) {
          throw _e;
        }, "e"), f: F};
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {s: /* @__PURE__ */ __name(function s() {
      it = o[Symbol.iterator]();
    }, "s"), n: /* @__PURE__ */ __name(function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    }, "n"), e: /* @__PURE__ */ __name(function e(_e2) {
      didErr = true;
      err = _e2;
    }, "e"), f: /* @__PURE__ */ __name(function f() {
      try {
        if (!normalCompletion && it["return"] != null)
          it["return"]();
      } finally {
        if (didErr)
          throw err;
      }
    }, "f")};
  }
  __name(_createForOfIteratorHelper, "_createForOfIteratorHelper");
  function _unsupportedIterableToArray(o, minLen) {
    if (!o)
      return;
    if (typeof o === "string")
      return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor)
      n = o.constructor.name;
    if (n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray(o, minLen);
  }
  __name(_unsupportedIterableToArray, "_unsupportedIterableToArray");
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length)
      len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  __name(_arrayLikeToArray, "_arrayLikeToArray");
  var MATCH_URL_YOUTUBE = /(?:youtu\.be\/|youtube(?:-nocookie)?\.com\/(?:embed\/|v\/|watch\/|watch\?v=|watch\?.+&v=))((\w|-){11})|youtube\.com\/playlist\?list=|youtube\.com\/user\//;
  exports.MATCH_URL_YOUTUBE = MATCH_URL_YOUTUBE;
  var MATCH_URL_SOUNDCLOUD = /(?:soundcloud\.com|snd\.sc)\/[^.]+$/;
  exports.MATCH_URL_SOUNDCLOUD = MATCH_URL_SOUNDCLOUD;
  var MATCH_URL_VIMEO = /vimeo\.com\/.+/;
  exports.MATCH_URL_VIMEO = MATCH_URL_VIMEO;
  var MATCH_URL_FACEBOOK = /^https?:\/\/(www\.)?facebook\.com.*\/(video(s)?|watch|story)(\.php?|\/).+$/;
  exports.MATCH_URL_FACEBOOK = MATCH_URL_FACEBOOK;
  var MATCH_URL_FACEBOOK_WATCH = /^https?:\/\/fb\.watch\/.+$/;
  exports.MATCH_URL_FACEBOOK_WATCH = MATCH_URL_FACEBOOK_WATCH;
  var MATCH_URL_STREAMABLE = /streamable\.com\/([a-z0-9]+)$/;
  exports.MATCH_URL_STREAMABLE = MATCH_URL_STREAMABLE;
  var MATCH_URL_WISTIA = /(?:wistia\.(?:com|net)|wi\.st)\/(?:medias|embed)\/(?:iframe\/)?(.*)$/;
  exports.MATCH_URL_WISTIA = MATCH_URL_WISTIA;
  var MATCH_URL_TWITCH_VIDEO = /(?:www\.|go\.)?twitch\.tv\/videos\/(\d+)($|\?)/;
  exports.MATCH_URL_TWITCH_VIDEO = MATCH_URL_TWITCH_VIDEO;
  var MATCH_URL_TWITCH_CHANNEL = /(?:www\.|go\.)?twitch\.tv\/([a-zA-Z0-9_]+)($|\?)/;
  exports.MATCH_URL_TWITCH_CHANNEL = MATCH_URL_TWITCH_CHANNEL;
  var MATCH_URL_DAILYMOTION = /^(?:(?:https?):)?(?:\/\/)?(?:www\.)?(?:(?:dailymotion\.com(?:\/embed)?\/video)|dai\.ly)\/([a-zA-Z0-9]+)(?:_[\w_-]+)?$/;
  exports.MATCH_URL_DAILYMOTION = MATCH_URL_DAILYMOTION;
  var MATCH_URL_MIXCLOUD = /mixcloud\.com\/([^/]+\/[^/]+)/;
  exports.MATCH_URL_MIXCLOUD = MATCH_URL_MIXCLOUD;
  var MATCH_URL_VIDYARD = /vidyard.com\/(?:watch\/)?([a-zA-Z0-9-]+)/;
  exports.MATCH_URL_VIDYARD = MATCH_URL_VIDYARD;
  var MATCH_URL_KALTURA = /^https?:\/\/[a-zA-Z]+\.kaltura.(com|org)\/p\/([0-9]+)\/sp\/([0-9]+)00\/embedIframeJs\/uiconf_id\/([0-9]+)\/partner_id\/([0-9]+)(.*)entry_id.([a-zA-Z0-9-_]+)$/;
  exports.MATCH_URL_KALTURA = MATCH_URL_KALTURA;
  var AUDIO_EXTENSIONS = /\.(m4a|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\?)/i;
  exports.AUDIO_EXTENSIONS = AUDIO_EXTENSIONS;
  var VIDEO_EXTENSIONS = /\.(mp4|og[gv]|webm|mov|m4v)($|\?)/i;
  exports.VIDEO_EXTENSIONS = VIDEO_EXTENSIONS;
  var HLS_EXTENSIONS = /\.(m3u8)($|\?)/i;
  exports.HLS_EXTENSIONS = HLS_EXTENSIONS;
  var DASH_EXTENSIONS = /\.(mpd)($|\?)/i;
  exports.DASH_EXTENSIONS = DASH_EXTENSIONS;
  var FLV_EXTENSIONS = /\.(flv)($|\?)/i;
  exports.FLV_EXTENSIONS = FLV_EXTENSIONS;
  var canPlayFile = /* @__PURE__ */ __name(function canPlayFile2(url) {
    if (url instanceof Array) {
      var _iterator = _createForOfIteratorHelper(url), _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done; ) {
          var item = _step.value;
          if (typeof item === "string" && canPlayFile2(item)) {
            return true;
          }
          if (canPlayFile2(item.src)) {
            return true;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return false;
    }
    if ((0, _utils.isMediaStream)(url) || (0, _utils.isBlobUrl)(url)) {
      return true;
    }
    return AUDIO_EXTENSIONS.test(url) || VIDEO_EXTENSIONS.test(url) || HLS_EXTENSIONS.test(url) || DASH_EXTENSIONS.test(url) || FLV_EXTENSIONS.test(url);
  }, "canPlayFile");
  var canPlay = {
    youtube: /* @__PURE__ */ __name(function youtube(url) {
      if (url instanceof Array) {
        return url.every(function(item) {
          return MATCH_URL_YOUTUBE.test(item);
        });
      }
      return MATCH_URL_YOUTUBE.test(url);
    }, "youtube"),
    soundcloud: /* @__PURE__ */ __name(function soundcloud(url) {
      return MATCH_URL_SOUNDCLOUD.test(url) && !AUDIO_EXTENSIONS.test(url);
    }, "soundcloud"),
    vimeo: /* @__PURE__ */ __name(function vimeo(url) {
      return MATCH_URL_VIMEO.test(url) && !VIDEO_EXTENSIONS.test(url) && !HLS_EXTENSIONS.test(url);
    }, "vimeo"),
    facebook: /* @__PURE__ */ __name(function facebook(url) {
      return MATCH_URL_FACEBOOK.test(url) || MATCH_URL_FACEBOOK_WATCH.test(url);
    }, "facebook"),
    streamable: /* @__PURE__ */ __name(function streamable(url) {
      return MATCH_URL_STREAMABLE.test(url);
    }, "streamable"),
    wistia: /* @__PURE__ */ __name(function wistia(url) {
      return MATCH_URL_WISTIA.test(url);
    }, "wistia"),
    twitch: /* @__PURE__ */ __name(function twitch(url) {
      return MATCH_URL_TWITCH_VIDEO.test(url) || MATCH_URL_TWITCH_CHANNEL.test(url);
    }, "twitch"),
    dailymotion: /* @__PURE__ */ __name(function dailymotion(url) {
      return MATCH_URL_DAILYMOTION.test(url);
    }, "dailymotion"),
    mixcloud: /* @__PURE__ */ __name(function mixcloud(url) {
      return MATCH_URL_MIXCLOUD.test(url);
    }, "mixcloud"),
    vidyard: /* @__PURE__ */ __name(function vidyard(url) {
      return MATCH_URL_VIDYARD.test(url);
    }, "vidyard"),
    kaltura: /* @__PURE__ */ __name(function kaltura(url) {
      return MATCH_URL_KALTURA.test(url);
    }, "kaltura"),
    file: canPlayFile
  };
  exports.canPlay = canPlay;
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/YouTube.js
var require_YouTube = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly)
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      keys.push.apply(keys, symbols);
    }
    return keys;
  }
  __name(ownKeys, "ownKeys");
  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      if (i % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  __name(_objectSpread, "_objectSpread");
  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }
  __name(_slicedToArray, "_slicedToArray");
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  __name(_nonIterableRest, "_nonIterableRest");
  function _unsupportedIterableToArray(o, minLen) {
    if (!o)
      return;
    if (typeof o === "string")
      return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor)
      n = o.constructor.name;
    if (n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray(o, minLen);
  }
  __name(_unsupportedIterableToArray, "_unsupportedIterableToArray");
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length)
      len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  __name(_arrayLikeToArray, "_arrayLikeToArray");
  function _iterableToArrayLimit(arr, i) {
    if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
      return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = void 0;
    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i)
          break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null)
          _i["return"]();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
  __name(_iterableToArrayLimit, "_iterableToArrayLimit");
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr))
      return arr;
  }
  __name(_arrayWithHoles, "_arrayWithHoles");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var SDK_URL = "https://www.youtube.com/iframe_api";
  var SDK_GLOBAL = "YT";
  var SDK_GLOBAL_READY = "onYouTubeIframeAPIReady";
  var MATCH_PLAYLIST = /[?&](?:list|channel)=([a-zA-Z0-9_-]+)/;
  var MATCH_USER_UPLOADS = /user\/([a-zA-Z0-9_-]+)\/?/;
  var MATCH_NOCOOKIE = /youtube-nocookie\.com/;
  var NOCOOKIE_HOST = "https://www.youtube-nocookie.com";
  var YouTube = function(_Component) {
    _inherits(YouTube2, _Component);
    var _super = _createSuper(YouTube2);
    function YouTube2() {
      var _this;
      _classCallCheck(this, YouTube2);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _defineProperty(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
      _defineProperty(_assertThisInitialized(_this), "parsePlaylist", function(url) {
        if (url instanceof Array) {
          return {
            listType: "playlist",
            playlist: url.map(_this.getID).join(",")
          };
        }
        if (MATCH_PLAYLIST.test(url)) {
          var _url$match = url.match(MATCH_PLAYLIST), _url$match2 = _slicedToArray(_url$match, 2), playlistId = _url$match2[1];
          return {
            listType: "playlist",
            list: playlistId.replace(/^UC/, "UU")
          };
        }
        if (MATCH_USER_UPLOADS.test(url)) {
          var _url$match3 = url.match(MATCH_USER_UPLOADS), _url$match4 = _slicedToArray(_url$match3, 2), username = _url$match4[1];
          return {
            listType: "user_uploads",
            list: username
          };
        }
        return {};
      });
      _defineProperty(_assertThisInitialized(_this), "onStateChange", function(event) {
        var data = event.data;
        var _this$props = _this.props, onPlay = _this$props.onPlay, onPause = _this$props.onPause, onBuffer = _this$props.onBuffer, onBufferEnd = _this$props.onBufferEnd, onEnded = _this$props.onEnded, onReady = _this$props.onReady, loop = _this$props.loop, _this$props$config = _this$props.config, playerVars = _this$props$config.playerVars, onUnstarted = _this$props$config.onUnstarted;
        var _window$SDK_GLOBAL$Pl = window[SDK_GLOBAL].PlayerState, UNSTARTED = _window$SDK_GLOBAL$Pl.UNSTARTED, PLAYING = _window$SDK_GLOBAL$Pl.PLAYING, PAUSED = _window$SDK_GLOBAL$Pl.PAUSED, BUFFERING = _window$SDK_GLOBAL$Pl.BUFFERING, ENDED = _window$SDK_GLOBAL$Pl.ENDED, CUED = _window$SDK_GLOBAL$Pl.CUED;
        if (data === UNSTARTED)
          onUnstarted();
        if (data === PLAYING) {
          onPlay();
          onBufferEnd();
        }
        if (data === PAUSED)
          onPause();
        if (data === BUFFERING)
          onBuffer();
        if (data === ENDED) {
          var isPlaylist = !!_this.callPlayer("getPlaylist");
          if (loop && !isPlaylist) {
            if (playerVars.start) {
              _this.seekTo(playerVars.start);
            } else {
              _this.play();
            }
          }
          onEnded();
        }
        if (data === CUED)
          onReady();
      });
      _defineProperty(_assertThisInitialized(_this), "mute", function() {
        _this.callPlayer("mute");
      });
      _defineProperty(_assertThisInitialized(_this), "unmute", function() {
        _this.callPlayer("unMute");
      });
      _defineProperty(_assertThisInitialized(_this), "ref", function(container) {
        _this.container = container;
      });
      return _this;
    }
    __name(YouTube2, "YouTube");
    _createClass(YouTube2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.props.onMount && this.props.onMount(this);
      }, "componentDidMount")
    }, {
      key: "getID",
      value: /* @__PURE__ */ __name(function getID(url) {
        if (!url || url instanceof Array || MATCH_PLAYLIST.test(url)) {
          return null;
        }
        return url.match(_patterns.MATCH_URL_YOUTUBE)[1];
      }, "getID")
    }, {
      key: "load",
      value: /* @__PURE__ */ __name(function load(url, isReady) {
        var _this2 = this;
        var _this$props2 = this.props, playing = _this$props2.playing, muted = _this$props2.muted, playsinline = _this$props2.playsinline, controls = _this$props2.controls, loop = _this$props2.loop, config = _this$props2.config, _onError = _this$props2.onError;
        var playerVars = config.playerVars, embedOptions = config.embedOptions;
        var id = this.getID(url);
        if (isReady) {
          if (MATCH_PLAYLIST.test(url) || MATCH_USER_UPLOADS.test(url) || url instanceof Array) {
            this.player.loadPlaylist(this.parsePlaylist(url));
            return;
          }
          this.player.cueVideoById({
            videoId: id,
            startSeconds: (0, _utils.parseStartTime)(url) || playerVars.start,
            endSeconds: (0, _utils.parseEndTime)(url) || playerVars.end
          });
          return;
        }
        (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, function(YT) {
          return YT.loaded;
        }).then(function(YT) {
          if (!_this2.container)
            return;
          _this2.player = new YT.Player(_this2.container, _objectSpread({
            width: "100%",
            height: "100%",
            videoId: id,
            playerVars: _objectSpread(_objectSpread({
              autoplay: playing ? 1 : 0,
              mute: muted ? 1 : 0,
              controls: controls ? 1 : 0,
              start: (0, _utils.parseStartTime)(url),
              end: (0, _utils.parseEndTime)(url),
              origin: window.location.origin,
              playsinline: playsinline ? 1 : 0
            }, _this2.parsePlaylist(url)), playerVars),
            events: {
              onReady: /* @__PURE__ */ __name(function onReady() {
                if (loop) {
                  _this2.player.setLoop(true);
                }
                _this2.props.onReady();
              }, "onReady"),
              onStateChange: _this2.onStateChange,
              onError: /* @__PURE__ */ __name(function onError(event) {
                return _onError(event.data);
              }, "onError")
            },
            host: MATCH_NOCOOKIE.test(url) ? NOCOOKIE_HOST : void 0
          }, embedOptions));
        }, _onError);
        if (embedOptions.events) {
          console.warn("Using `embedOptions.events` will likely break things. Use ReactPlayer\u2019s callback props instead, eg onReady, onPlay, onPause");
        }
      }, "load")
    }, {
      key: "play",
      value: /* @__PURE__ */ __name(function play() {
        this.callPlayer("playVideo");
      }, "play")
    }, {
      key: "pause",
      value: /* @__PURE__ */ __name(function pause() {
        this.callPlayer("pauseVideo");
      }, "pause")
    }, {
      key: "stop",
      value: /* @__PURE__ */ __name(function stop() {
        if (!document.body.contains(this.callPlayer("getIframe")))
          return;
        this.callPlayer("stopVideo");
      }, "stop")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(amount) {
        this.callPlayer("seekTo", amount);
        if (!this.props.playing) {
          this.pause();
        }
      }, "seekTo")
    }, {
      key: "setVolume",
      value: /* @__PURE__ */ __name(function setVolume(fraction) {
        this.callPlayer("setVolume", fraction * 100);
      }, "setVolume")
    }, {
      key: "setPlaybackRate",
      value: /* @__PURE__ */ __name(function setPlaybackRate(rate) {
        this.callPlayer("setPlaybackRate", rate);
      }, "setPlaybackRate")
    }, {
      key: "setLoop",
      value: /* @__PURE__ */ __name(function setLoop(loop) {
        this.callPlayer("setLoop", loop);
      }, "setLoop")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        return this.callPlayer("getDuration");
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        return this.callPlayer("getCurrentTime");
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        return this.callPlayer("getVideoLoadedFraction") * this.getDuration();
      }, "getSecondsLoaded")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var display = this.props.display;
        var style = {
          width: "100%",
          height: "100%",
          display
        };
        return _react["default"].createElement("div", {
          style
        }, _react["default"].createElement("div", {
          ref: this.ref
        }));
      }, "render")
    }]);
    return YouTube2;
  }(_react.Component);
  exports["default"] = YouTube;
  _defineProperty(YouTube, "displayName", "YouTube");
  _defineProperty(YouTube, "canPlay", _patterns.canPlay.youtube);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/SoundCloud.js
var require_SoundCloud = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly)
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      keys.push.apply(keys, symbols);
    }
    return keys;
  }
  __name(ownKeys, "ownKeys");
  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      if (i % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  __name(_objectSpread, "_objectSpread");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var SDK_URL = "https://w.soundcloud.com/player/api.js";
  var SDK_GLOBAL = "SC";
  var SoundCloud = function(_Component) {
    _inherits(SoundCloud2, _Component);
    var _super = _createSuper(SoundCloud2);
    function SoundCloud2() {
      var _this;
      _classCallCheck(this, SoundCloud2);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _defineProperty(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
      _defineProperty(_assertThisInitialized(_this), "duration", null);
      _defineProperty(_assertThisInitialized(_this), "currentTime", null);
      _defineProperty(_assertThisInitialized(_this), "fractionLoaded", null);
      _defineProperty(_assertThisInitialized(_this), "mute", function() {
        _this.setVolume(0);
      });
      _defineProperty(_assertThisInitialized(_this), "unmute", function() {
        if (_this.props.volume !== null) {
          _this.setVolume(_this.props.volume);
        }
      });
      _defineProperty(_assertThisInitialized(_this), "ref", function(iframe) {
        _this.iframe = iframe;
      });
      return _this;
    }
    __name(SoundCloud2, "SoundCloud");
    _createClass(SoundCloud2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.props.onMount && this.props.onMount(this);
      }, "componentDidMount")
    }, {
      key: "load",
      value: /* @__PURE__ */ __name(function load(url, isReady) {
        var _this2 = this;
        (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(SC) {
          if (!_this2.iframe)
            return;
          var _SC$Widget$Events = SC.Widget.Events, PLAY = _SC$Widget$Events.PLAY, PLAY_PROGRESS = _SC$Widget$Events.PLAY_PROGRESS, PAUSE = _SC$Widget$Events.PAUSE, FINISH = _SC$Widget$Events.FINISH, ERROR = _SC$Widget$Events.ERROR;
          if (!isReady) {
            _this2.player = SC.Widget(_this2.iframe);
            _this2.player.bind(PLAY, _this2.props.onPlay);
            _this2.player.bind(PAUSE, function() {
              var remaining = _this2.duration - _this2.currentTime;
              if (remaining < 0.05) {
                return;
              }
              _this2.props.onPause();
            });
            _this2.player.bind(PLAY_PROGRESS, function(e) {
              _this2.currentTime = e.currentPosition / 1e3;
              _this2.fractionLoaded = e.loadedProgress;
            });
            _this2.player.bind(FINISH, function() {
              return _this2.props.onEnded();
            });
            _this2.player.bind(ERROR, function(e) {
              return _this2.props.onError(e);
            });
          }
          _this2.player.load(url, _objectSpread(_objectSpread({}, _this2.props.config.options), {}, {
            callback: /* @__PURE__ */ __name(function callback() {
              _this2.player.getDuration(function(duration) {
                _this2.duration = duration / 1e3;
                _this2.props.onReady();
              });
            }, "callback")
          }));
        });
      }, "load")
    }, {
      key: "play",
      value: /* @__PURE__ */ __name(function play() {
        this.callPlayer("play");
      }, "play")
    }, {
      key: "pause",
      value: /* @__PURE__ */ __name(function pause() {
        this.callPlayer("pause");
      }, "pause")
    }, {
      key: "stop",
      value: /* @__PURE__ */ __name(function stop() {
      }, "stop")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(seconds) {
        this.callPlayer("seekTo", seconds * 1e3);
      }, "seekTo")
    }, {
      key: "setVolume",
      value: /* @__PURE__ */ __name(function setVolume(fraction) {
        this.callPlayer("setVolume", fraction * 100);
      }, "setVolume")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        return this.duration;
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        return this.currentTime;
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        return this.fractionLoaded * this.duration;
      }, "getSecondsLoaded")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var display = this.props.display;
        var style = {
          width: "100%",
          height: "100%",
          display
        };
        return _react["default"].createElement("iframe", {
          ref: this.ref,
          src: "https://w.soundcloud.com/player/?url=".concat(encodeURIComponent(this.props.url)),
          style,
          frameBorder: 0,
          allow: "autoplay"
        });
      }, "render")
    }]);
    return SoundCloud2;
  }(_react.Component);
  exports["default"] = SoundCloud;
  _defineProperty(SoundCloud, "displayName", "SoundCloud");
  _defineProperty(SoundCloud, "canPlay", _patterns.canPlay.soundcloud);
  _defineProperty(SoundCloud, "loopOnEnded", true);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/Vimeo.js
var require_Vimeo = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly)
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      keys.push.apply(keys, symbols);
    }
    return keys;
  }
  __name(ownKeys, "ownKeys");
  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      if (i % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  __name(_objectSpread, "_objectSpread");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var SDK_URL = "https://player.vimeo.com/api/player.js";
  var SDK_GLOBAL = "Vimeo";
  var Vimeo = function(_Component) {
    _inherits(Vimeo2, _Component);
    var _super = _createSuper(Vimeo2);
    function Vimeo2() {
      var _this;
      _classCallCheck(this, Vimeo2);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _defineProperty(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
      _defineProperty(_assertThisInitialized(_this), "duration", null);
      _defineProperty(_assertThisInitialized(_this), "currentTime", null);
      _defineProperty(_assertThisInitialized(_this), "secondsLoaded", null);
      _defineProperty(_assertThisInitialized(_this), "mute", function() {
        _this.setVolume(0);
      });
      _defineProperty(_assertThisInitialized(_this), "unmute", function() {
        if (_this.props.volume !== null) {
          _this.setVolume(_this.props.volume);
        }
      });
      _defineProperty(_assertThisInitialized(_this), "ref", function(container) {
        _this.container = container;
      });
      return _this;
    }
    __name(Vimeo2, "Vimeo");
    _createClass(Vimeo2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.props.onMount && this.props.onMount(this);
      }, "componentDidMount")
    }, {
      key: "load",
      value: /* @__PURE__ */ __name(function load(url) {
        var _this2 = this;
        this.duration = null;
        (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(Vimeo3) {
          if (!_this2.container)
            return;
          _this2.player = new Vimeo3.Player(_this2.container, _objectSpread({
            url,
            autoplay: _this2.props.playing,
            muted: _this2.props.muted,
            loop: _this2.props.loop,
            playsinline: _this2.props.playsinline,
            controls: _this2.props.controls
          }, _this2.props.config.playerOptions));
          _this2.player.ready().then(function() {
            var iframe = _this2.container.querySelector("iframe");
            iframe.style.width = "100%";
            iframe.style.height = "100%";
          })["catch"](_this2.props.onError);
          _this2.player.on("loaded", function() {
            _this2.props.onReady();
            _this2.refreshDuration();
          });
          _this2.player.on("play", function() {
            _this2.props.onPlay();
            _this2.refreshDuration();
          });
          _this2.player.on("pause", _this2.props.onPause);
          _this2.player.on("seeked", function(e) {
            return _this2.props.onSeek(e.seconds);
          });
          _this2.player.on("ended", _this2.props.onEnded);
          _this2.player.on("error", _this2.props.onError);
          _this2.player.on("timeupdate", function(_ref) {
            var seconds = _ref.seconds;
            _this2.currentTime = seconds;
          });
          _this2.player.on("progress", function(_ref2) {
            var seconds = _ref2.seconds;
            _this2.secondsLoaded = seconds;
          });
          _this2.player.on("bufferstart", _this2.props.onBuffer);
          _this2.player.on("bufferend", _this2.props.onBufferEnd);
        }, this.props.onError);
      }, "load")
    }, {
      key: "refreshDuration",
      value: /* @__PURE__ */ __name(function refreshDuration() {
        var _this3 = this;
        this.player.getDuration().then(function(duration) {
          _this3.duration = duration;
        });
      }, "refreshDuration")
    }, {
      key: "play",
      value: /* @__PURE__ */ __name(function play() {
        var promise = this.callPlayer("play");
        if (promise) {
          promise["catch"](this.props.onError);
        }
      }, "play")
    }, {
      key: "pause",
      value: /* @__PURE__ */ __name(function pause() {
        this.callPlayer("pause");
      }, "pause")
    }, {
      key: "stop",
      value: /* @__PURE__ */ __name(function stop() {
        this.callPlayer("unload");
      }, "stop")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(seconds) {
        this.callPlayer("setCurrentTime", seconds);
      }, "seekTo")
    }, {
      key: "setVolume",
      value: /* @__PURE__ */ __name(function setVolume(fraction) {
        this.callPlayer("setVolume", fraction);
      }, "setVolume")
    }, {
      key: "setLoop",
      value: /* @__PURE__ */ __name(function setLoop(loop) {
        this.callPlayer("setLoop", loop);
      }, "setLoop")
    }, {
      key: "setPlaybackRate",
      value: /* @__PURE__ */ __name(function setPlaybackRate(rate) {
        this.callPlayer("setPlaybackRate", rate);
      }, "setPlaybackRate")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        return this.duration;
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        return this.currentTime;
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        return this.secondsLoaded;
      }, "getSecondsLoaded")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var display = this.props.display;
        var style = {
          width: "100%",
          height: "100%",
          overflow: "hidden",
          display
        };
        return _react["default"].createElement("div", {
          key: this.props.url,
          ref: this.ref,
          style
        });
      }, "render")
    }]);
    return Vimeo2;
  }(_react.Component);
  exports["default"] = Vimeo;
  _defineProperty(Vimeo, "displayName", "Vimeo");
  _defineProperty(Vimeo, "canPlay", _patterns.canPlay.vimeo);
  _defineProperty(Vimeo, "forceLoad", true);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/Facebook.js
var require_Facebook = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function _extends() {
    _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends.apply(this, arguments);
  }
  __name(_extends, "_extends");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var SDK_URL = "https://connect.facebook.net/en_US/sdk.js";
  var SDK_GLOBAL = "FB";
  var SDK_GLOBAL_READY = "fbAsyncInit";
  var PLAYER_ID_PREFIX = "facebook-player-";
  var Facebook = function(_Component) {
    _inherits(Facebook2, _Component);
    var _super = _createSuper(Facebook2);
    function Facebook2() {
      var _this;
      _classCallCheck(this, Facebook2);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _defineProperty(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
      _defineProperty(_assertThisInitialized(_this), "playerID", _this.props.config.playerId || "".concat(PLAYER_ID_PREFIX).concat((0, _utils.randomString)()));
      _defineProperty(_assertThisInitialized(_this), "mute", function() {
        _this.callPlayer("mute");
      });
      _defineProperty(_assertThisInitialized(_this), "unmute", function() {
        _this.callPlayer("unmute");
      });
      return _this;
    }
    __name(Facebook2, "Facebook");
    _createClass(Facebook2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.props.onMount && this.props.onMount(this);
      }, "componentDidMount")
    }, {
      key: "load",
      value: /* @__PURE__ */ __name(function load(url, isReady) {
        var _this2 = this;
        if (isReady) {
          (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(function(FB) {
            return FB.XFBML.parse();
          });
          return;
        }
        (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(function(FB) {
          FB.init({
            appId: _this2.props.config.appId,
            xfbml: true,
            version: _this2.props.config.version
          });
          FB.Event.subscribe("xfbml.render", function(msg) {
            _this2.props.onLoaded();
          });
          FB.Event.subscribe("xfbml.ready", function(msg) {
            if (msg.type === "video" && msg.id === _this2.playerID) {
              _this2.player = msg.instance;
              _this2.player.subscribe("startedPlaying", _this2.props.onPlay);
              _this2.player.subscribe("paused", _this2.props.onPause);
              _this2.player.subscribe("finishedPlaying", _this2.props.onEnded);
              _this2.player.subscribe("startedBuffering", _this2.props.onBuffer);
              _this2.player.subscribe("finishedBuffering", _this2.props.onBufferEnd);
              _this2.player.subscribe("error", _this2.props.onError);
              if (_this2.props.muted) {
                _this2.callPlayer("mute");
              } else {
                _this2.callPlayer("unmute");
              }
              _this2.props.onReady();
              document.getElementById(_this2.playerID).querySelector("iframe").style.visibility = "visible";
            }
          });
        });
      }, "load")
    }, {
      key: "play",
      value: /* @__PURE__ */ __name(function play() {
        this.callPlayer("play");
      }, "play")
    }, {
      key: "pause",
      value: /* @__PURE__ */ __name(function pause() {
        this.callPlayer("pause");
      }, "pause")
    }, {
      key: "stop",
      value: /* @__PURE__ */ __name(function stop() {
      }, "stop")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(seconds) {
        this.callPlayer("seek", seconds);
      }, "seekTo")
    }, {
      key: "setVolume",
      value: /* @__PURE__ */ __name(function setVolume(fraction) {
        this.callPlayer("setVolume", fraction);
      }, "setVolume")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        return this.callPlayer("getDuration");
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        return this.callPlayer("getCurrentPosition");
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        return null;
      }, "getSecondsLoaded")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var attributes = this.props.config.attributes;
        var style = {
          width: "100%",
          height: "100%"
        };
        return _react["default"].createElement("div", _extends({
          style,
          id: this.playerID,
          className: "fb-video",
          "data-href": this.props.url,
          "data-autoplay": this.props.playing ? "true" : "false",
          "data-allowfullscreen": "true",
          "data-controls": this.props.controls ? "true" : "false"
        }, attributes));
      }, "render")
    }]);
    return Facebook2;
  }(_react.Component);
  exports["default"] = Facebook;
  _defineProperty(Facebook, "displayName", "Facebook");
  _defineProperty(Facebook, "canPlay", _patterns.canPlay.facebook);
  _defineProperty(Facebook, "loopOnEnded", true);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/Streamable.js
var require_Streamable = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var SDK_URL = "https://cdn.embed.ly/player-0.1.0.min.js";
  var SDK_GLOBAL = "playerjs";
  var Streamable = function(_Component) {
    _inherits(Streamable2, _Component);
    var _super = _createSuper(Streamable2);
    function Streamable2() {
      var _this;
      _classCallCheck(this, Streamable2);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _defineProperty(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
      _defineProperty(_assertThisInitialized(_this), "duration", null);
      _defineProperty(_assertThisInitialized(_this), "currentTime", null);
      _defineProperty(_assertThisInitialized(_this), "secondsLoaded", null);
      _defineProperty(_assertThisInitialized(_this), "mute", function() {
        _this.callPlayer("mute");
      });
      _defineProperty(_assertThisInitialized(_this), "unmute", function() {
        _this.callPlayer("unmute");
      });
      _defineProperty(_assertThisInitialized(_this), "ref", function(iframe) {
        _this.iframe = iframe;
      });
      return _this;
    }
    __name(Streamable2, "Streamable");
    _createClass(Streamable2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.props.onMount && this.props.onMount(this);
      }, "componentDidMount")
    }, {
      key: "load",
      value: /* @__PURE__ */ __name(function load(url) {
        var _this2 = this;
        (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(playerjs) {
          if (!_this2.iframe)
            return;
          _this2.player = new playerjs.Player(_this2.iframe);
          _this2.player.setLoop(_this2.props.loop);
          _this2.player.on("ready", _this2.props.onReady);
          _this2.player.on("play", _this2.props.onPlay);
          _this2.player.on("pause", _this2.props.onPause);
          _this2.player.on("seeked", _this2.props.onSeek);
          _this2.player.on("ended", _this2.props.onEnded);
          _this2.player.on("error", _this2.props.onError);
          _this2.player.on("timeupdate", function(_ref) {
            var duration = _ref.duration, seconds = _ref.seconds;
            _this2.duration = duration;
            _this2.currentTime = seconds;
          });
          _this2.player.on("buffered", function(_ref2) {
            var percent = _ref2.percent;
            if (_this2.duration) {
              _this2.secondsLoaded = _this2.duration * percent;
            }
          });
          if (_this2.props.muted) {
            _this2.player.mute();
          }
        }, this.props.onError);
      }, "load")
    }, {
      key: "play",
      value: /* @__PURE__ */ __name(function play() {
        this.callPlayer("play");
      }, "play")
    }, {
      key: "pause",
      value: /* @__PURE__ */ __name(function pause() {
        this.callPlayer("pause");
      }, "pause")
    }, {
      key: "stop",
      value: /* @__PURE__ */ __name(function stop() {
      }, "stop")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(seconds) {
        this.callPlayer("setCurrentTime", seconds);
      }, "seekTo")
    }, {
      key: "setVolume",
      value: /* @__PURE__ */ __name(function setVolume(fraction) {
        this.callPlayer("setVolume", fraction * 100);
      }, "setVolume")
    }, {
      key: "setLoop",
      value: /* @__PURE__ */ __name(function setLoop(loop) {
        this.callPlayer("setLoop", loop);
      }, "setLoop")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        return this.duration;
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        return this.currentTime;
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        return this.secondsLoaded;
      }, "getSecondsLoaded")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var id = this.props.url.match(_patterns.MATCH_URL_STREAMABLE)[1];
        var style = {
          width: "100%",
          height: "100%"
        };
        return _react["default"].createElement("iframe", {
          ref: this.ref,
          src: "https://streamable.com/o/".concat(id),
          frameBorder: "0",
          scrolling: "no",
          style,
          allowFullScreen: true
        });
      }, "render")
    }]);
    return Streamable2;
  }(_react.Component);
  exports["default"] = Streamable;
  _defineProperty(Streamable, "displayName", "Streamable");
  _defineProperty(Streamable, "canPlay", _patterns.canPlay.streamable);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/Wistia.js
var require_Wistia = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly)
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      keys.push.apply(keys, symbols);
    }
    return keys;
  }
  __name(ownKeys, "ownKeys");
  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      if (i % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  __name(_objectSpread, "_objectSpread");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var SDK_URL = "https://fast.wistia.com/assets/external/E-v1.js";
  var SDK_GLOBAL = "Wistia";
  var PLAYER_ID_PREFIX = "wistia-player-";
  var Wistia = function(_Component) {
    _inherits(Wistia2, _Component);
    var _super = _createSuper(Wistia2);
    function Wistia2() {
      var _this;
      _classCallCheck(this, Wistia2);
      for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
        _args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(_args));
      _defineProperty(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
      _defineProperty(_assertThisInitialized(_this), "playerID", _this.props.config.playerId || "".concat(PLAYER_ID_PREFIX).concat((0, _utils.randomString)()));
      _defineProperty(_assertThisInitialized(_this), "onPlay", function() {
        var _this$props;
        return (_this$props = _this.props).onPlay.apply(_this$props, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "onPause", function() {
        var _this$props2;
        return (_this$props2 = _this.props).onPause.apply(_this$props2, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "onSeek", function() {
        var _this$props3;
        return (_this$props3 = _this.props).onSeek.apply(_this$props3, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "onEnded", function() {
        var _this$props4;
        return (_this$props4 = _this.props).onEnded.apply(_this$props4, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "mute", function() {
        _this.callPlayer("mute");
      });
      _defineProperty(_assertThisInitialized(_this), "unmute", function() {
        _this.callPlayer("unmute");
      });
      return _this;
    }
    __name(Wistia2, "Wistia");
    _createClass(Wistia2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.props.onMount && this.props.onMount(this);
      }, "componentDidMount")
    }, {
      key: "load",
      value: /* @__PURE__ */ __name(function load(url) {
        var _this2 = this;
        var _this$props5 = this.props, playing = _this$props5.playing, muted = _this$props5.muted, controls = _this$props5.controls, _onReady = _this$props5.onReady, config = _this$props5.config, onError = _this$props5.onError;
        (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(Wistia3) {
          if (config.customControls) {
            config.customControls.forEach(function(control) {
              return Wistia3.defineControl(control);
            });
          }
          window._wq = window._wq || [];
          window._wq.push({
            id: _this2.playerID,
            options: _objectSpread({
              autoPlay: playing,
              silentAutoPlay: "allow",
              muted,
              controlsVisibleOnLoad: controls,
              fullscreenButton: controls,
              playbar: controls,
              playbackRateControl: controls,
              qualityControl: controls,
              volumeControl: controls,
              settingsControl: controls,
              smallPlayButton: controls
            }, config.options),
            onReady: /* @__PURE__ */ __name(function onReady(player) {
              _this2.player = player;
              _this2.unbind();
              _this2.player.bind("play", _this2.onPlay);
              _this2.player.bind("pause", _this2.onPause);
              _this2.player.bind("seek", _this2.onSeek);
              _this2.player.bind("end", _this2.onEnded);
              _onReady();
            }, "onReady")
          });
        }, onError);
      }, "load")
    }, {
      key: "unbind",
      value: /* @__PURE__ */ __name(function unbind() {
        this.player.unbind("play", this.onPlay);
        this.player.unbind("pause", this.onPause);
        this.player.unbind("seek", this.onSeek);
        this.player.unbind("end", this.onEnded);
      }, "unbind")
    }, {
      key: "play",
      value: /* @__PURE__ */ __name(function play() {
        this.callPlayer("play");
      }, "play")
    }, {
      key: "pause",
      value: /* @__PURE__ */ __name(function pause() {
        this.callPlayer("pause");
      }, "pause")
    }, {
      key: "stop",
      value: /* @__PURE__ */ __name(function stop() {
        this.unbind();
        this.callPlayer("remove");
      }, "stop")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(seconds) {
        this.callPlayer("time", seconds);
      }, "seekTo")
    }, {
      key: "setVolume",
      value: /* @__PURE__ */ __name(function setVolume(fraction) {
        this.callPlayer("volume", fraction);
      }, "setVolume")
    }, {
      key: "setPlaybackRate",
      value: /* @__PURE__ */ __name(function setPlaybackRate(rate) {
        this.callPlayer("playbackRate", rate);
      }, "setPlaybackRate")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        return this.callPlayer("duration");
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        return this.callPlayer("time");
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        return null;
      }, "getSecondsLoaded")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var url = this.props.url;
        var videoID = url && url.match(_patterns.MATCH_URL_WISTIA)[1];
        var className = "wistia_embed wistia_async_".concat(videoID);
        var style = {
          width: "100%",
          height: "100%"
        };
        return _react["default"].createElement("div", {
          id: this.playerID,
          key: videoID,
          className,
          style
        });
      }, "render")
    }]);
    return Wistia2;
  }(_react.Component);
  exports["default"] = Wistia;
  _defineProperty(Wistia, "displayName", "Wistia");
  _defineProperty(Wistia, "canPlay", _patterns.canPlay.wistia);
  _defineProperty(Wistia, "loopOnEnded", true);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/Twitch.js
var require_Twitch = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly)
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      keys.push.apply(keys, symbols);
    }
    return keys;
  }
  __name(ownKeys, "ownKeys");
  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      if (i % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  __name(_objectSpread, "_objectSpread");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var SDK_URL = "https://player.twitch.tv/js/embed/v1.js";
  var SDK_GLOBAL = "Twitch";
  var PLAYER_ID_PREFIX = "twitch-player-";
  var Twitch = function(_Component) {
    _inherits(Twitch2, _Component);
    var _super = _createSuper(Twitch2);
    function Twitch2() {
      var _this;
      _classCallCheck(this, Twitch2);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _defineProperty(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
      _defineProperty(_assertThisInitialized(_this), "playerID", _this.props.config.playerId || "".concat(PLAYER_ID_PREFIX).concat((0, _utils.randomString)()));
      _defineProperty(_assertThisInitialized(_this), "mute", function() {
        _this.callPlayer("setMuted", true);
      });
      _defineProperty(_assertThisInitialized(_this), "unmute", function() {
        _this.callPlayer("setMuted", false);
      });
      return _this;
    }
    __name(Twitch2, "Twitch");
    _createClass(Twitch2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.props.onMount && this.props.onMount(this);
      }, "componentDidMount")
    }, {
      key: "load",
      value: /* @__PURE__ */ __name(function load(url, isReady) {
        var _this2 = this;
        var _this$props = this.props, playsinline = _this$props.playsinline, onError = _this$props.onError, config = _this$props.config, controls = _this$props.controls;
        var isChannel = _patterns.MATCH_URL_TWITCH_CHANNEL.test(url);
        var id = isChannel ? url.match(_patterns.MATCH_URL_TWITCH_CHANNEL)[1] : url.match(_patterns.MATCH_URL_TWITCH_VIDEO)[1];
        if (isReady) {
          if (isChannel) {
            this.player.setChannel(id);
          } else {
            this.player.setVideo("v" + id);
          }
          return;
        }
        (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(Twitch3) {
          _this2.player = new Twitch3.Player(_this2.playerID, _objectSpread({
            video: isChannel ? "" : id,
            channel: isChannel ? id : "",
            height: "100%",
            width: "100%",
            playsinline,
            autoplay: _this2.props.playing,
            muted: _this2.props.muted,
            controls: isChannel ? true : controls,
            time: (0, _utils.parseStartTime)(url)
          }, config.options));
          var _Twitch$Player = Twitch3.Player, READY = _Twitch$Player.READY, PLAYING = _Twitch$Player.PLAYING, PAUSE = _Twitch$Player.PAUSE, ENDED = _Twitch$Player.ENDED, ONLINE = _Twitch$Player.ONLINE, OFFLINE = _Twitch$Player.OFFLINE;
          _this2.player.addEventListener(READY, _this2.props.onReady);
          _this2.player.addEventListener(PLAYING, _this2.props.onPlay);
          _this2.player.addEventListener(PAUSE, _this2.props.onPause);
          _this2.player.addEventListener(ENDED, _this2.props.onEnded);
          _this2.player.addEventListener(ONLINE, _this2.props.onLoaded);
          _this2.player.addEventListener(OFFLINE, _this2.props.onLoaded);
        }, onError);
      }, "load")
    }, {
      key: "play",
      value: /* @__PURE__ */ __name(function play() {
        this.callPlayer("play");
      }, "play")
    }, {
      key: "pause",
      value: /* @__PURE__ */ __name(function pause() {
        this.callPlayer("pause");
      }, "pause")
    }, {
      key: "stop",
      value: /* @__PURE__ */ __name(function stop() {
        this.callPlayer("pause");
      }, "stop")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(seconds) {
        this.callPlayer("seek", seconds);
      }, "seekTo")
    }, {
      key: "setVolume",
      value: /* @__PURE__ */ __name(function setVolume(fraction) {
        this.callPlayer("setVolume", fraction);
      }, "setVolume")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        return this.callPlayer("getDuration");
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        return this.callPlayer("getCurrentTime");
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        return null;
      }, "getSecondsLoaded")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var style = {
          width: "100%",
          height: "100%"
        };
        return _react["default"].createElement("div", {
          style,
          id: this.playerID
        });
      }, "render")
    }]);
    return Twitch2;
  }(_react.Component);
  exports["default"] = Twitch;
  _defineProperty(Twitch, "displayName", "Twitch");
  _defineProperty(Twitch, "canPlay", _patterns.canPlay.twitch);
  _defineProperty(Twitch, "loopOnEnded", true);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/DailyMotion.js
var require_DailyMotion = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly)
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      keys.push.apply(keys, symbols);
    }
    return keys;
  }
  __name(ownKeys, "ownKeys");
  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      if (i % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  __name(_objectSpread, "_objectSpread");
  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }
  __name(_slicedToArray, "_slicedToArray");
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  __name(_nonIterableRest, "_nonIterableRest");
  function _unsupportedIterableToArray(o, minLen) {
    if (!o)
      return;
    if (typeof o === "string")
      return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor)
      n = o.constructor.name;
    if (n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray(o, minLen);
  }
  __name(_unsupportedIterableToArray, "_unsupportedIterableToArray");
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length)
      len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  __name(_arrayLikeToArray, "_arrayLikeToArray");
  function _iterableToArrayLimit(arr, i) {
    if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
      return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = void 0;
    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i)
          break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null)
          _i["return"]();
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
  __name(_iterableToArrayLimit, "_iterableToArrayLimit");
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr))
      return arr;
  }
  __name(_arrayWithHoles, "_arrayWithHoles");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var SDK_URL = "https://api.dmcdn.net/all.js";
  var SDK_GLOBAL = "DM";
  var SDK_GLOBAL_READY = "dmAsyncInit";
  var DailyMotion = function(_Component) {
    _inherits(DailyMotion2, _Component);
    var _super = _createSuper(DailyMotion2);
    function DailyMotion2() {
      var _this;
      _classCallCheck(this, DailyMotion2);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _defineProperty(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
      _defineProperty(_assertThisInitialized(_this), "onDurationChange", function() {
        var duration = _this.getDuration();
        _this.props.onDuration(duration);
      });
      _defineProperty(_assertThisInitialized(_this), "mute", function() {
        _this.callPlayer("setMuted", true);
      });
      _defineProperty(_assertThisInitialized(_this), "unmute", function() {
        _this.callPlayer("setMuted", false);
      });
      _defineProperty(_assertThisInitialized(_this), "ref", function(container) {
        _this.container = container;
      });
      return _this;
    }
    __name(DailyMotion2, "DailyMotion");
    _createClass(DailyMotion2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.props.onMount && this.props.onMount(this);
      }, "componentDidMount")
    }, {
      key: "load",
      value: /* @__PURE__ */ __name(function load(url) {
        var _this2 = this;
        var _this$props = this.props, controls = _this$props.controls, config = _this$props.config, onError = _this$props.onError, playing = _this$props.playing;
        var _url$match = url.match(_patterns.MATCH_URL_DAILYMOTION), _url$match2 = _slicedToArray(_url$match, 2), id = _url$match2[1];
        if (this.player) {
          this.player.load(id, {
            start: (0, _utils.parseStartTime)(url),
            autoplay: playing
          });
          return;
        }
        (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, function(DM) {
          return DM.player;
        }).then(function(DM) {
          if (!_this2.container)
            return;
          var Player = DM.player;
          _this2.player = new Player(_this2.container, {
            width: "100%",
            height: "100%",
            video: id,
            params: _objectSpread({
              controls,
              autoplay: _this2.props.playing,
              mute: _this2.props.muted,
              start: (0, _utils.parseStartTime)(url),
              origin: window.location.origin
            }, config.params),
            events: {
              apiready: _this2.props.onReady,
              seeked: /* @__PURE__ */ __name(function seeked() {
                return _this2.props.onSeek(_this2.player.currentTime);
              }, "seeked"),
              video_end: _this2.props.onEnded,
              durationchange: _this2.onDurationChange,
              pause: _this2.props.onPause,
              playing: _this2.props.onPlay,
              waiting: _this2.props.onBuffer,
              error: /* @__PURE__ */ __name(function error(event) {
                return onError(event);
              }, "error")
            }
          });
        }, onError);
      }, "load")
    }, {
      key: "play",
      value: /* @__PURE__ */ __name(function play() {
        this.callPlayer("play");
      }, "play")
    }, {
      key: "pause",
      value: /* @__PURE__ */ __name(function pause() {
        this.callPlayer("pause");
      }, "pause")
    }, {
      key: "stop",
      value: /* @__PURE__ */ __name(function stop() {
      }, "stop")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(seconds) {
        this.callPlayer("seek", seconds);
      }, "seekTo")
    }, {
      key: "setVolume",
      value: /* @__PURE__ */ __name(function setVolume(fraction) {
        this.callPlayer("setVolume", fraction);
      }, "setVolume")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        return this.player.duration || null;
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        return this.player.currentTime;
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        return this.player.bufferedTime;
      }, "getSecondsLoaded")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var display = this.props.display;
        var style = {
          width: "100%",
          height: "100%",
          display
        };
        return _react["default"].createElement("div", {
          style
        }, _react["default"].createElement("div", {
          ref: this.ref
        }));
      }, "render")
    }]);
    return DailyMotion2;
  }(_react.Component);
  exports["default"] = DailyMotion;
  _defineProperty(DailyMotion, "displayName", "DailyMotion");
  _defineProperty(DailyMotion, "canPlay", _patterns.canPlay.dailymotion);
  _defineProperty(DailyMotion, "loopOnEnded", true);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/Mixcloud.js
var require_Mixcloud = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly)
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      keys.push.apply(keys, symbols);
    }
    return keys;
  }
  __name(ownKeys, "ownKeys");
  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      if (i % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  __name(_objectSpread, "_objectSpread");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var SDK_URL = "https://widget.mixcloud.com/media/js/widgetApi.js";
  var SDK_GLOBAL = "Mixcloud";
  var Mixcloud = function(_Component) {
    _inherits(Mixcloud2, _Component);
    var _super = _createSuper(Mixcloud2);
    function Mixcloud2() {
      var _this;
      _classCallCheck(this, Mixcloud2);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _defineProperty(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
      _defineProperty(_assertThisInitialized(_this), "duration", null);
      _defineProperty(_assertThisInitialized(_this), "currentTime", null);
      _defineProperty(_assertThisInitialized(_this), "secondsLoaded", null);
      _defineProperty(_assertThisInitialized(_this), "mute", function() {
      });
      _defineProperty(_assertThisInitialized(_this), "unmute", function() {
      });
      _defineProperty(_assertThisInitialized(_this), "ref", function(iframe) {
        _this.iframe = iframe;
      });
      return _this;
    }
    __name(Mixcloud2, "Mixcloud");
    _createClass(Mixcloud2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.props.onMount && this.props.onMount(this);
      }, "componentDidMount")
    }, {
      key: "load",
      value: /* @__PURE__ */ __name(function load(url) {
        var _this2 = this;
        (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(Mixcloud3) {
          _this2.player = Mixcloud3.PlayerWidget(_this2.iframe);
          _this2.player.ready.then(function() {
            _this2.player.events.play.on(_this2.props.onPlay);
            _this2.player.events.pause.on(_this2.props.onPause);
            _this2.player.events.ended.on(_this2.props.onEnded);
            _this2.player.events.error.on(_this2.props.error);
            _this2.player.events.progress.on(function(seconds, duration) {
              _this2.currentTime = seconds;
              _this2.duration = duration;
            });
            _this2.props.onReady();
          });
        }, this.props.onError);
      }, "load")
    }, {
      key: "play",
      value: /* @__PURE__ */ __name(function play() {
        this.callPlayer("play");
      }, "play")
    }, {
      key: "pause",
      value: /* @__PURE__ */ __name(function pause() {
        this.callPlayer("pause");
      }, "pause")
    }, {
      key: "stop",
      value: /* @__PURE__ */ __name(function stop() {
      }, "stop")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(seconds) {
        this.callPlayer("seek", seconds);
      }, "seekTo")
    }, {
      key: "setVolume",
      value: /* @__PURE__ */ __name(function setVolume(fraction) {
      }, "setVolume")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        return this.duration;
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        return this.currentTime;
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        return null;
      }, "getSecondsLoaded")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var _this$props = this.props, url = _this$props.url, config = _this$props.config;
        var id = url.match(_patterns.MATCH_URL_MIXCLOUD)[1];
        var style = {
          width: "100%",
          height: "100%"
        };
        var query = (0, _utils.queryString)(_objectSpread(_objectSpread({}, config.options), {}, {
          feed: "/".concat(id, "/")
        }));
        return _react["default"].createElement("iframe", {
          key: id,
          ref: this.ref,
          style,
          src: "https://www.mixcloud.com/widget/iframe/?".concat(query),
          frameBorder: "0"
        });
      }, "render")
    }]);
    return Mixcloud2;
  }(_react.Component);
  exports["default"] = Mixcloud;
  _defineProperty(Mixcloud, "displayName", "Mixcloud");
  _defineProperty(Mixcloud, "canPlay", _patterns.canPlay.mixcloud);
  _defineProperty(Mixcloud, "loopOnEnded", true);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/Vidyard.js
var require_Vidyard = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly)
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      keys.push.apply(keys, symbols);
    }
    return keys;
  }
  __name(ownKeys, "ownKeys");
  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      if (i % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  __name(_objectSpread, "_objectSpread");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var SDK_URL = "https://play.vidyard.com/embed/v4.js";
  var SDK_GLOBAL = "VidyardV4";
  var SDK_GLOBAL_READY = "onVidyardAPI";
  var Vidyard = function(_Component) {
    _inherits(Vidyard2, _Component);
    var _super = _createSuper(Vidyard2);
    function Vidyard2() {
      var _this;
      _classCallCheck(this, Vidyard2);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _defineProperty(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
      _defineProperty(_assertThisInitialized(_this), "mute", function() {
        _this.setVolume(0);
      });
      _defineProperty(_assertThisInitialized(_this), "unmute", function() {
        if (_this.props.volume !== null) {
          _this.setVolume(_this.props.volume);
        }
      });
      _defineProperty(_assertThisInitialized(_this), "ref", function(container) {
        _this.container = container;
      });
      return _this;
    }
    __name(Vidyard2, "Vidyard");
    _createClass(Vidyard2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.props.onMount && this.props.onMount(this);
      }, "componentDidMount")
    }, {
      key: "load",
      value: /* @__PURE__ */ __name(function load(url) {
        var _this2 = this;
        var _this$props = this.props, playing = _this$props.playing, config = _this$props.config, onError = _this$props.onError, onDuration = _this$props.onDuration;
        var id = url && url.match(_patterns.MATCH_URL_VIDYARD)[1];
        if (this.player) {
          this.stop();
        }
        (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(function(Vidyard3) {
          if (!_this2.container)
            return;
          Vidyard3.api.addReadyListener(function(data, player) {
            _this2.player = player;
            _this2.player.on("ready", _this2.props.onReady);
            _this2.player.on("play", _this2.props.onPlay);
            _this2.player.on("pause", _this2.props.onPause);
            _this2.player.on("seek", _this2.props.onSeek);
            _this2.player.on("playerComplete", _this2.props.onEnded);
          }, id);
          Vidyard3.api.renderPlayer(_objectSpread({
            uuid: id,
            container: _this2.container,
            autoplay: playing ? 1 : 0
          }, config.options));
          Vidyard3.api.getPlayerMetadata(id).then(function(meta) {
            _this2.duration = meta.length_in_seconds;
            onDuration(meta.length_in_seconds);
          });
        }, onError);
      }, "load")
    }, {
      key: "play",
      value: /* @__PURE__ */ __name(function play() {
        this.callPlayer("play");
      }, "play")
    }, {
      key: "pause",
      value: /* @__PURE__ */ __name(function pause() {
        this.callPlayer("pause");
      }, "pause")
    }, {
      key: "stop",
      value: /* @__PURE__ */ __name(function stop() {
        window.VidyardV4.api.destroyPlayer(this.player);
      }, "stop")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(amount) {
        this.callPlayer("seek", amount);
      }, "seekTo")
    }, {
      key: "setVolume",
      value: /* @__PURE__ */ __name(function setVolume(fraction) {
        this.callPlayer("setVolume", fraction);
      }, "setVolume")
    }, {
      key: "setPlaybackRate",
      value: /* @__PURE__ */ __name(function setPlaybackRate(rate) {
        this.callPlayer("setPlaybackSpeed", rate);
      }, "setPlaybackRate")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        return this.duration;
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        return this.callPlayer("currentTime");
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        return null;
      }, "getSecondsLoaded")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var display = this.props.display;
        var style = {
          width: "100%",
          height: "100%",
          display
        };
        return _react["default"].createElement("div", {
          style
        }, _react["default"].createElement("div", {
          ref: this.ref
        }));
      }, "render")
    }]);
    return Vidyard2;
  }(_react.Component);
  exports["default"] = Vidyard;
  _defineProperty(Vidyard, "displayName", "Vidyard");
  _defineProperty(Vidyard, "canPlay", _patterns.canPlay.vidyard);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/Kaltura.js
var require_Kaltura = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var SDK_URL = "https://cdn.embed.ly/player-0.1.0.min.js";
  var SDK_GLOBAL = "playerjs";
  var Kaltura = function(_Component) {
    _inherits(Kaltura2, _Component);
    var _super = _createSuper(Kaltura2);
    function Kaltura2() {
      var _this;
      _classCallCheck(this, Kaltura2);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _defineProperty(_assertThisInitialized(_this), "callPlayer", _utils.callPlayer);
      _defineProperty(_assertThisInitialized(_this), "duration", null);
      _defineProperty(_assertThisInitialized(_this), "currentTime", null);
      _defineProperty(_assertThisInitialized(_this), "secondsLoaded", null);
      _defineProperty(_assertThisInitialized(_this), "mute", function() {
        _this.callPlayer("mute");
      });
      _defineProperty(_assertThisInitialized(_this), "unmute", function() {
        _this.callPlayer("unmute");
      });
      _defineProperty(_assertThisInitialized(_this), "ref", function(iframe) {
        _this.iframe = iframe;
      });
      return _this;
    }
    __name(Kaltura2, "Kaltura");
    _createClass(Kaltura2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.props.onMount && this.props.onMount(this);
      }, "componentDidMount")
    }, {
      key: "load",
      value: /* @__PURE__ */ __name(function load(url) {
        var _this2 = this;
        (0, _utils.getSDK)(SDK_URL, SDK_GLOBAL).then(function(playerjs) {
          if (!_this2.iframe)
            return;
          _this2.player = new playerjs.Player(_this2.iframe);
          _this2.player.on("ready", function() {
            _this2.player.isReady = true;
            _this2.player.on("play", _this2.props.onPlay);
            _this2.player.on("pause", _this2.props.onPause);
            _this2.player.on("seeked", _this2.props.onSeek);
            _this2.player.on("ended", _this2.props.onEnded);
            _this2.player.on("error", _this2.props.onError);
            _this2.player.on("timeupdate", function(_ref) {
              var duration = _ref.duration, seconds = _ref.seconds;
              _this2.duration = duration;
              _this2.currentTime = seconds;
            });
            _this2.player.on("buffered", function(_ref2) {
              var percent = _ref2.percent;
              if (_this2.duration) {
                _this2.secondsLoaded = _this2.duration * percent;
              }
            });
            _this2.player.setLoop(_this2.props.loop);
            if (_this2.props.muted) {
              _this2.player.mute();
            }
            setTimeout(function() {
              _this2.props.onReady();
            });
          });
        }, this.props.onError);
      }, "load")
    }, {
      key: "play",
      value: /* @__PURE__ */ __name(function play() {
        this.callPlayer("play");
      }, "play")
    }, {
      key: "pause",
      value: /* @__PURE__ */ __name(function pause() {
        this.callPlayer("pause");
      }, "pause")
    }, {
      key: "stop",
      value: /* @__PURE__ */ __name(function stop() {
      }, "stop")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(seconds) {
        this.callPlayer("setCurrentTime", seconds);
      }, "seekTo")
    }, {
      key: "setVolume",
      value: /* @__PURE__ */ __name(function setVolume(fraction) {
        this.callPlayer("setVolume", fraction);
      }, "setVolume")
    }, {
      key: "setLoop",
      value: /* @__PURE__ */ __name(function setLoop(loop) {
        this.callPlayer("setLoop", loop);
      }, "setLoop")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        return this.duration;
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        return this.currentTime;
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        return this.secondsLoaded;
      }, "getSecondsLoaded")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var style = {
          width: "100%",
          height: "100%"
        };
        return _react["default"].createElement("iframe", {
          ref: this.ref,
          src: this.props.url,
          frameBorder: "0",
          scrolling: "no",
          style,
          allowFullScreen: true,
          allow: "encrypted-media",
          referrerPolicy: "no-referrer-when-downgrade"
        });
      }, "render")
    }]);
    return Kaltura2;
  }(_react.Component);
  exports["default"] = Kaltura;
  _defineProperty(Kaltura, "displayName", "Kaltura");
  _defineProperty(Kaltura, "canPlay", _patterns.canPlay.kaltura);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/FilePlayer.js
var require_FilePlayer = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function _extends() {
    _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends.apply(this, arguments);
  }
  __name(_extends, "_extends");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var HAS_NAVIGATOR = typeof navigator !== "undefined";
  var IS_IPAD_PRO = HAS_NAVIGATOR && navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1;
  var IS_IOS = HAS_NAVIGATOR && (/iPad|iPhone|iPod/.test(navigator.userAgent) || IS_IPAD_PRO) && !window.MSStream;
  var HLS_SDK_URL = "https://cdn.jsdelivr.net/npm/hls.js@VERSION/dist/hls.min.js";
  var HLS_GLOBAL = "Hls";
  var DASH_SDK_URL = "https://cdnjs.cloudflare.com/ajax/libs/dashjs/VERSION/dash.all.min.js";
  var DASH_GLOBAL = "dashjs";
  var FLV_SDK_URL = "https://cdn.jsdelivr.net/npm/flv.js@VERSION/dist/flv.min.js";
  var FLV_GLOBAL = "flvjs";
  var MATCH_DROPBOX_URL = /www\.dropbox\.com\/.+/;
  var MATCH_CLOUDFLARE_STREAM = /https:\/\/watch\.cloudflarestream\.com\/([a-z0-9]+)/;
  var REPLACE_CLOUDFLARE_STREAM = "https://videodelivery.net/{id}/manifest/video.m3u8";
  var FilePlayer = function(_Component) {
    _inherits(FilePlayer2, _Component);
    var _super = _createSuper(FilePlayer2);
    function FilePlayer2() {
      var _this;
      _classCallCheck(this, FilePlayer2);
      for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
        _args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(_args));
      _defineProperty(_assertThisInitialized(_this), "onReady", function() {
        var _this$props;
        return (_this$props = _this.props).onReady.apply(_this$props, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "onPlay", function() {
        var _this$props2;
        return (_this$props2 = _this.props).onPlay.apply(_this$props2, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "onBuffer", function() {
        var _this$props3;
        return (_this$props3 = _this.props).onBuffer.apply(_this$props3, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "onBufferEnd", function() {
        var _this$props4;
        return (_this$props4 = _this.props).onBufferEnd.apply(_this$props4, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "onPause", function() {
        var _this$props5;
        return (_this$props5 = _this.props).onPause.apply(_this$props5, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "onEnded", function() {
        var _this$props6;
        return (_this$props6 = _this.props).onEnded.apply(_this$props6, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "onError", function() {
        var _this$props7;
        return (_this$props7 = _this.props).onError.apply(_this$props7, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "onEnablePIP", function() {
        var _this$props8;
        return (_this$props8 = _this.props).onEnablePIP.apply(_this$props8, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "onDisablePIP", function(e) {
        var _this$props9 = _this.props, onDisablePIP = _this$props9.onDisablePIP, playing = _this$props9.playing;
        onDisablePIP(e);
        if (playing) {
          _this.play();
        }
      });
      _defineProperty(_assertThisInitialized(_this), "onPresentationModeChange", function(e) {
        if (_this.player && (0, _utils.supportsWebKitPresentationMode)(_this.player)) {
          var webkitPresentationMode = _this.player.webkitPresentationMode;
          if (webkitPresentationMode === "picture-in-picture") {
            _this.onEnablePIP(e);
          } else if (webkitPresentationMode === "inline") {
            _this.onDisablePIP(e);
          }
        }
      });
      _defineProperty(_assertThisInitialized(_this), "onSeek", function(e) {
        _this.props.onSeek(e.target.currentTime);
      });
      _defineProperty(_assertThisInitialized(_this), "mute", function() {
        _this.player.muted = true;
      });
      _defineProperty(_assertThisInitialized(_this), "unmute", function() {
        _this.player.muted = false;
      });
      _defineProperty(_assertThisInitialized(_this), "renderSourceElement", function(source, index) {
        if (typeof source === "string") {
          return _react["default"].createElement("source", {
            key: index,
            src: source
          });
        }
        return _react["default"].createElement("source", _extends({
          key: index
        }, source));
      });
      _defineProperty(_assertThisInitialized(_this), "renderTrack", function(track, index) {
        return _react["default"].createElement("track", _extends({
          key: index
        }, track));
      });
      _defineProperty(_assertThisInitialized(_this), "ref", function(player) {
        if (_this.player) {
          _this.prevPlayer = _this.player;
        }
        _this.player = player;
      });
      return _this;
    }
    __name(FilePlayer2, "FilePlayer");
    _createClass(FilePlayer2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.props.onMount && this.props.onMount(this);
        this.addListeners(this.player);
        if (IS_IOS) {
          this.player.load();
        }
      }, "componentDidMount")
    }, {
      key: "componentDidUpdate",
      value: /* @__PURE__ */ __name(function componentDidUpdate(prevProps) {
        if (this.shouldUseAudio(this.props) !== this.shouldUseAudio(prevProps)) {
          this.removeListeners(this.prevPlayer, prevProps.url);
          this.addListeners(this.player);
        }
        if (this.props.url !== prevProps.url && !(0, _utils.isMediaStream)(this.props.url)) {
          this.player.srcObject = null;
        }
      }, "componentDidUpdate")
    }, {
      key: "componentWillUnmount",
      value: /* @__PURE__ */ __name(function componentWillUnmount() {
        this.removeListeners(this.player);
        if (this.hls) {
          this.hls.destroy();
        }
      }, "componentWillUnmount")
    }, {
      key: "addListeners",
      value: /* @__PURE__ */ __name(function addListeners(player) {
        var _this$props10 = this.props, url = _this$props10.url, playsinline = _this$props10.playsinline;
        player.addEventListener("play", this.onPlay);
        player.addEventListener("waiting", this.onBuffer);
        player.addEventListener("playing", this.onBufferEnd);
        player.addEventListener("pause", this.onPause);
        player.addEventListener("seeked", this.onSeek);
        player.addEventListener("ended", this.onEnded);
        player.addEventListener("error", this.onError);
        player.addEventListener("enterpictureinpicture", this.onEnablePIP);
        player.addEventListener("leavepictureinpicture", this.onDisablePIP);
        player.addEventListener("webkitpresentationmodechanged", this.onPresentationModeChange);
        if (!this.shouldUseHLS(url)) {
          player.addEventListener("canplay", this.onReady);
        }
        if (playsinline) {
          player.setAttribute("playsinline", "");
          player.setAttribute("webkit-playsinline", "");
          player.setAttribute("x5-playsinline", "");
        }
      }, "addListeners")
    }, {
      key: "removeListeners",
      value: /* @__PURE__ */ __name(function removeListeners(player, url) {
        player.removeEventListener("canplay", this.onReady);
        player.removeEventListener("play", this.onPlay);
        player.removeEventListener("waiting", this.onBuffer);
        player.removeEventListener("playing", this.onBufferEnd);
        player.removeEventListener("pause", this.onPause);
        player.removeEventListener("seeked", this.onSeek);
        player.removeEventListener("ended", this.onEnded);
        player.removeEventListener("error", this.onError);
        player.removeEventListener("enterpictureinpicture", this.onEnablePIP);
        player.removeEventListener("leavepictureinpicture", this.onDisablePIP);
        player.removeEventListener("webkitpresentationmodechanged", this.onPresentationModeChange);
        if (!this.shouldUseHLS(url)) {
          player.removeEventListener("canplay", this.onReady);
        }
      }, "removeListeners")
    }, {
      key: "shouldUseAudio",
      value: /* @__PURE__ */ __name(function shouldUseAudio(props) {
        if (props.config.forceVideo) {
          return false;
        }
        if (props.config.attributes.poster) {
          return false;
        }
        return _patterns.AUDIO_EXTENSIONS.test(props.url) || props.config.forceAudio;
      }, "shouldUseAudio")
    }, {
      key: "shouldUseHLS",
      value: /* @__PURE__ */ __name(function shouldUseHLS(url) {
        if (this.props.config.forceHLS) {
          return true;
        }
        if (IS_IOS) {
          return false;
        }
        return _patterns.HLS_EXTENSIONS.test(url) || MATCH_CLOUDFLARE_STREAM.test(url);
      }, "shouldUseHLS")
    }, {
      key: "shouldUseDASH",
      value: /* @__PURE__ */ __name(function shouldUseDASH(url) {
        return _patterns.DASH_EXTENSIONS.test(url) || this.props.config.forceDASH;
      }, "shouldUseDASH")
    }, {
      key: "shouldUseFLV",
      value: /* @__PURE__ */ __name(function shouldUseFLV(url) {
        return _patterns.FLV_EXTENSIONS.test(url) || this.props.config.forceFLV;
      }, "shouldUseFLV")
    }, {
      key: "load",
      value: /* @__PURE__ */ __name(function load(url) {
        var _this2 = this;
        var _this$props$config = this.props.config, hlsVersion = _this$props$config.hlsVersion, hlsOptions = _this$props$config.hlsOptions, dashVersion = _this$props$config.dashVersion, flvVersion = _this$props$config.flvVersion;
        if (this.hls) {
          this.hls.destroy();
        }
        if (this.dash) {
          this.dash.reset();
        }
        if (this.shouldUseHLS(url)) {
          (0, _utils.getSDK)(HLS_SDK_URL.replace("VERSION", hlsVersion), HLS_GLOBAL).then(function(Hls) {
            _this2.hls = new Hls(hlsOptions);
            _this2.hls.on(Hls.Events.MANIFEST_PARSED, function() {
              _this2.props.onReady();
            });
            _this2.hls.on(Hls.Events.ERROR, function(e, data) {
              _this2.props.onError(e, data, _this2.hls, Hls);
            });
            if (MATCH_CLOUDFLARE_STREAM.test(url)) {
              var id = url.match(MATCH_CLOUDFLARE_STREAM)[1];
              _this2.hls.loadSource(REPLACE_CLOUDFLARE_STREAM.replace("{id}", id));
            } else {
              _this2.hls.loadSource(url);
            }
            _this2.hls.attachMedia(_this2.player);
            _this2.props.onLoaded();
          });
        }
        if (this.shouldUseDASH(url)) {
          (0, _utils.getSDK)(DASH_SDK_URL.replace("VERSION", dashVersion), DASH_GLOBAL).then(function(dashjs) {
            _this2.dash = dashjs.MediaPlayer().create();
            _this2.dash.initialize(_this2.player, url, _this2.props.playing);
            _this2.dash.on("error", _this2.props.onError);
            if (parseInt(dashVersion) < 3) {
              _this2.dash.getDebug().setLogToBrowserConsole(false);
            } else {
              _this2.dash.updateSettings({
                debug: {
                  logLevel: dashjs.Debug.LOG_LEVEL_NONE
                }
              });
            }
            _this2.props.onLoaded();
          });
        }
        if (this.shouldUseFLV(url)) {
          (0, _utils.getSDK)(FLV_SDK_URL.replace("VERSION", flvVersion), FLV_GLOBAL).then(function(flvjs) {
            _this2.flv = flvjs.createPlayer({
              type: "flv",
              url
            });
            _this2.flv.attachMediaElement(_this2.player);
            _this2.flv.load();
            _this2.props.onLoaded();
          });
        }
        if (url instanceof Array) {
          this.player.load();
        } else if ((0, _utils.isMediaStream)(url)) {
          try {
            this.player.srcObject = url;
          } catch (e) {
            this.player.src = window.URL.createObjectURL(url);
          }
        }
      }, "load")
    }, {
      key: "play",
      value: /* @__PURE__ */ __name(function play() {
        var promise = this.player.play();
        if (promise) {
          promise["catch"](this.props.onError);
        }
      }, "play")
    }, {
      key: "pause",
      value: /* @__PURE__ */ __name(function pause() {
        this.player.pause();
      }, "pause")
    }, {
      key: "stop",
      value: /* @__PURE__ */ __name(function stop() {
        this.player.removeAttribute("src");
        if (this.dash) {
          this.dash.reset();
        }
      }, "stop")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(seconds) {
        this.player.currentTime = seconds;
      }, "seekTo")
    }, {
      key: "setVolume",
      value: /* @__PURE__ */ __name(function setVolume(fraction) {
        this.player.volume = fraction;
      }, "setVolume")
    }, {
      key: "enablePIP",
      value: /* @__PURE__ */ __name(function enablePIP() {
        if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {
          this.player.requestPictureInPicture();
        } else if ((0, _utils.supportsWebKitPresentationMode)(this.player) && this.player.webkitPresentationMode !== "picture-in-picture") {
          this.player.webkitSetPresentationMode("picture-in-picture");
        }
      }, "enablePIP")
    }, {
      key: "disablePIP",
      value: /* @__PURE__ */ __name(function disablePIP() {
        if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {
          document.exitPictureInPicture();
        } else if ((0, _utils.supportsWebKitPresentationMode)(this.player) && this.player.webkitPresentationMode !== "inline") {
          this.player.webkitSetPresentationMode("inline");
        }
      }, "disablePIP")
    }, {
      key: "setPlaybackRate",
      value: /* @__PURE__ */ __name(function setPlaybackRate(rate) {
        this.player.playbackRate = rate;
      }, "setPlaybackRate")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        if (!this.player)
          return null;
        var _this$player = this.player, duration = _this$player.duration, seekable = _this$player.seekable;
        if (duration === Infinity && seekable.length > 0) {
          return seekable.end(seekable.length - 1);
        }
        return duration;
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        if (!this.player)
          return null;
        return this.player.currentTime;
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        if (!this.player)
          return null;
        var buffered = this.player.buffered;
        if (buffered.length === 0) {
          return 0;
        }
        var end = buffered.end(buffered.length - 1);
        var duration = this.getDuration();
        if (end > duration) {
          return duration;
        }
        return end;
      }, "getSecondsLoaded")
    }, {
      key: "getSource",
      value: /* @__PURE__ */ __name(function getSource(url) {
        var useHLS = this.shouldUseHLS(url);
        var useDASH = this.shouldUseDASH(url);
        var useFLV = this.shouldUseFLV(url);
        if (url instanceof Array || (0, _utils.isMediaStream)(url) || useHLS || useDASH || useFLV) {
          return void 0;
        }
        if (MATCH_DROPBOX_URL.test(url)) {
          return url.replace("www.dropbox.com", "dl.dropboxusercontent.com");
        }
        return url;
      }, "getSource")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var _this$props11 = this.props, url = _this$props11.url, playing = _this$props11.playing, loop = _this$props11.loop, controls = _this$props11.controls, muted = _this$props11.muted, config = _this$props11.config, width = _this$props11.width, height = _this$props11.height;
        var useAudio = this.shouldUseAudio(this.props);
        var Element2 = useAudio ? "audio" : "video";
        var style = {
          width: width === "auto" ? width : "100%",
          height: height === "auto" ? height : "100%"
        };
        return _react["default"].createElement(Element2, _extends({
          ref: this.ref,
          src: this.getSource(url),
          style,
          preload: "auto",
          autoPlay: playing || void 0,
          controls,
          muted,
          loop
        }, config.attributes), url instanceof Array && url.map(this.renderSourceElement), config.tracks.map(this.renderTrack));
      }, "render")
    }]);
    return FilePlayer2;
  }(_react.Component);
  exports["default"] = FilePlayer;
  _defineProperty(FilePlayer, "displayName", "FilePlayer");
  _defineProperty(FilePlayer, "canPlay", _patterns.canPlay.file);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/players/index.js
var require_players = __commonJS((exports) => {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = require_react();
  var _utils = require_utils();
  var _patterns = require_patterns();
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  var _default = [{
    key: "youtube",
    name: "YouTube",
    canPlay: _patterns.canPlay.youtube,
    lazyPlayer: (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_YouTube());
      });
    })
  }, {
    key: "soundcloud",
    name: "SoundCloud",
    canPlay: _patterns.canPlay.soundcloud,
    lazyPlayer: (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_SoundCloud());
      });
    })
  }, {
    key: "vimeo",
    name: "Vimeo",
    canPlay: _patterns.canPlay.vimeo,
    lazyPlayer: (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_Vimeo());
      });
    })
  }, {
    key: "facebook",
    name: "Facebook",
    canPlay: _patterns.canPlay.facebook,
    lazyPlayer: (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_Facebook());
      });
    })
  }, {
    key: "streamable",
    name: "Streamable",
    canPlay: _patterns.canPlay.streamable,
    lazyPlayer: (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_Streamable());
      });
    })
  }, {
    key: "wistia",
    name: "Wistia",
    canPlay: _patterns.canPlay.wistia,
    lazyPlayer: (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_Wistia());
      });
    })
  }, {
    key: "twitch",
    name: "Twitch",
    canPlay: _patterns.canPlay.twitch,
    lazyPlayer: (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_Twitch());
      });
    })
  }, {
    key: "dailymotion",
    name: "DailyMotion",
    canPlay: _patterns.canPlay.dailymotion,
    lazyPlayer: (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_DailyMotion());
      });
    })
  }, {
    key: "mixcloud",
    name: "Mixcloud",
    canPlay: _patterns.canPlay.mixcloud,
    lazyPlayer: (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_Mixcloud());
      });
    })
  }, {
    key: "vidyard",
    name: "Vidyard",
    canPlay: _patterns.canPlay.vidyard,
    lazyPlayer: (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_Vidyard());
      });
    })
  }, {
    key: "kaltura",
    name: "Kaltura",
    canPlay: _patterns.canPlay.kaltura,
    lazyPlayer: (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_Kaltura());
      });
    })
  }, {
    key: "file",
    name: "FilePlayer",
    canPlay: _patterns.canPlay.file,
    canEnablePIP: /* @__PURE__ */ __name(function canEnablePIP(url) {
      return _patterns.canPlay.file(url) && (document.pictureInPictureEnabled || (0, _utils.supportsWebKitPresentationMode)()) && !_patterns.AUDIO_EXTENSIONS.test(url);
    }, "canEnablePIP"),
    lazyPlayer: (0, _react.lazy)(function() {
      return Promise.resolve().then(function() {
        return _interopRequireWildcard(require_FilePlayer());
      });
    })
  }];
  exports["default"] = _default;
});

// ../.yarn/cache/memoize-one-npm-5.1.1-78136bf522-e7c4a9ccec.zip/node_modules/memoize-one/dist/memoize-one.esm.js
var require_memoize_one_esm = __commonJS((exports) => {
  __markAsModule(exports);
  __export(exports, {
    default: () => memoize_one_esm_default
  });
  function areInputsEqual(newInputs, lastInputs) {
    if (newInputs.length !== lastInputs.length) {
      return false;
    }
    for (var i = 0; i < newInputs.length; i++) {
      if (newInputs[i] !== lastInputs[i]) {
        return false;
      }
    }
    return true;
  }
  __name(areInputsEqual, "areInputsEqual");
  function memoizeOne(resultFn, isEqual) {
    if (isEqual === void 0) {
      isEqual = areInputsEqual;
    }
    var lastThis;
    var lastArgs = [];
    var lastResult;
    var calledOnce = false;
    function memoized() {
      var newArgs = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        newArgs[_i] = arguments[_i];
      }
      if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
        return lastResult;
      }
      lastResult = resultFn.apply(this, newArgs);
      calledOnce = true;
      lastThis = this;
      lastArgs = newArgs;
      return lastResult;
    }
    __name(memoized, "memoized");
    return memoized;
  }
  __name(memoizeOne, "memoizeOne");
  var memoize_one_esm_default = memoizeOne;
});

// ../.yarn/cache/react-fast-compare-npm-3.2.0-fbfa6627d9-6fe65c889e.zip/node_modules/react-fast-compare/index.js
var require_react_fast_compare = __commonJS((exports, module) => {
  var hasElementType = typeof Element !== "undefined";
  var hasMap = typeof Map === "function";
  var hasSet = typeof Set === "function";
  var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
  function equal(a, b) {
    if (a === b)
      return true;
    if (a && b && typeof a == "object" && typeof b == "object") {
      if (a.constructor !== b.constructor)
        return false;
      var length, i, keys;
      if (Array.isArray(a)) {
        length = a.length;
        if (length != b.length)
          return false;
        for (i = length; i-- !== 0; )
          if (!equal(a[i], b[i]))
            return false;
        return true;
      }
      var it;
      if (hasMap && a instanceof Map && b instanceof Map) {
        if (a.size !== b.size)
          return false;
        it = a.entries();
        while (!(i = it.next()).done)
          if (!b.has(i.value[0]))
            return false;
        it = a.entries();
        while (!(i = it.next()).done)
          if (!equal(i.value[1], b.get(i.value[0])))
            return false;
        return true;
      }
      if (hasSet && a instanceof Set && b instanceof Set) {
        if (a.size !== b.size)
          return false;
        it = a.entries();
        while (!(i = it.next()).done)
          if (!b.has(i.value[0]))
            return false;
        return true;
      }
      if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
        length = a.length;
        if (length != b.length)
          return false;
        for (i = length; i-- !== 0; )
          if (a[i] !== b[i])
            return false;
        return true;
      }
      if (a.constructor === RegExp)
        return a.source === b.source && a.flags === b.flags;
      if (a.valueOf !== Object.prototype.valueOf)
        return a.valueOf() === b.valueOf();
      if (a.toString !== Object.prototype.toString)
        return a.toString() === b.toString();
      keys = Object.keys(a);
      length = keys.length;
      if (length !== Object.keys(b).length)
        return false;
      for (i = length; i-- !== 0; )
        if (!Object.prototype.hasOwnProperty.call(b, keys[i]))
          return false;
      if (hasElementType && a instanceof Element)
        return false;
      for (i = length; i-- !== 0; ) {
        if ((keys[i] === "_owner" || keys[i] === "__v" || keys[i] === "__o") && a.$$typeof) {
          continue;
        }
        if (!equal(a[keys[i]], b[keys[i]]))
          return false;
      }
      return true;
    }
    return a !== a && b !== b;
  }
  __name(equal, "equal");
  module.exports = /* @__PURE__ */ __name(function isEqual(a, b) {
    try {
      return equal(a, b);
    } catch (error) {
      if ((error.message || "").match(/stack|recursion/i)) {
        console.warn("react-fast-compare cannot handle circular refs");
        return false;
      }
      throw error;
    }
  }, "isEqual");
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/props.js
var require_props = __commonJS((exports) => {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.defaultProps = exports.propTypes = void 0;
  var _propTypes = _interopRequireDefault(require_prop_types());
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  __name(_interopRequireDefault, "_interopRequireDefault");
  var string = _propTypes["default"].string;
  var bool = _propTypes["default"].bool;
  var number = _propTypes["default"].number;
  var array = _propTypes["default"].array;
  var oneOfType = _propTypes["default"].oneOfType;
  var shape = _propTypes["default"].shape;
  var object = _propTypes["default"].object;
  var func = _propTypes["default"].func;
  var node = _propTypes["default"].node;
  var propTypes = {
    url: oneOfType([string, array, object]),
    playing: bool,
    loop: bool,
    controls: bool,
    volume: number,
    muted: bool,
    playbackRate: number,
    width: oneOfType([string, number]),
    height: oneOfType([string, number]),
    style: object,
    progressInterval: number,
    playsinline: bool,
    pip: bool,
    stopOnUnmount: bool,
    light: oneOfType([bool, string]),
    playIcon: node,
    previewTabIndex: number,
    fallback: node,
    wrapper: oneOfType([string, func, shape({
      render: func.isRequired
    })]),
    config: shape({
      soundcloud: shape({
        options: object
      }),
      youtube: shape({
        playerVars: object,
        embedOptions: object,
        onUnstarted: func
      }),
      facebook: shape({
        appId: string,
        version: string,
        playerId: string,
        attributes: object
      }),
      dailymotion: shape({
        params: object
      }),
      vimeo: shape({
        playerOptions: object
      }),
      file: shape({
        attributes: object,
        tracks: array,
        forceVideo: bool,
        forceAudio: bool,
        forceHLS: bool,
        forceDASH: bool,
        forceFLV: bool,
        hlsOptions: object,
        hlsVersion: string,
        dashVersion: string,
        flvVersion: string
      }),
      wistia: shape({
        options: object,
        playerId: string,
        customControls: array
      }),
      mixcloud: shape({
        options: object
      }),
      twitch: shape({
        options: object,
        playerId: string
      }),
      vidyard: shape({
        options: object
      })
    }),
    onReady: func,
    onStart: func,
    onPlay: func,
    onPause: func,
    onBuffer: func,
    onBufferEnd: func,
    onEnded: func,
    onError: func,
    onDuration: func,
    onSeek: func,
    onProgress: func,
    onClickPreview: func,
    onEnablePIP: func,
    onDisablePIP: func
  };
  exports.propTypes = propTypes;
  var noop = /* @__PURE__ */ __name(function noop2() {
  }, "noop");
  var defaultProps = {
    playing: false,
    loop: false,
    controls: false,
    volume: null,
    muted: false,
    playbackRate: 1,
    width: "640px",
    height: "360px",
    style: {},
    progressInterval: 1e3,
    playsinline: false,
    pip: false,
    stopOnUnmount: true,
    light: false,
    fallback: null,
    wrapper: "div",
    previewTabIndex: 0,
    config: {
      soundcloud: {
        options: {
          visual: true,
          buying: false,
          liking: false,
          download: false,
          sharing: false,
          show_comments: false,
          show_playcount: false
        }
      },
      youtube: {
        playerVars: {
          playsinline: 1,
          showinfo: 0,
          rel: 0,
          iv_load_policy: 3,
          modestbranding: 1
        },
        embedOptions: {},
        onUnstarted: noop
      },
      facebook: {
        appId: "1309697205772819",
        version: "v3.3",
        playerId: null,
        attributes: {}
      },
      dailymotion: {
        params: {
          api: 1,
          "endscreen-enable": false
        }
      },
      vimeo: {
        playerOptions: {
          autopause: false,
          byline: false,
          portrait: false,
          title: false
        }
      },
      file: {
        attributes: {},
        tracks: [],
        forceVideo: false,
        forceAudio: false,
        forceHLS: false,
        forceDASH: false,
        forceFLV: false,
        hlsOptions: {},
        hlsVersion: "0.14.16",
        dashVersion: "3.1.3",
        flvVersion: "1.5.0"
      },
      wistia: {
        options: {},
        playerId: null,
        customControls: null
      },
      mixcloud: {
        options: {
          hide_cover: 1
        }
      },
      twitch: {
        options: {},
        playerId: null
      },
      vidyard: {
        options: {}
      }
    },
    onReady: noop,
    onStart: noop,
    onPlay: noop,
    onPause: noop,
    onBuffer: noop,
    onBufferEnd: noop,
    onEnded: noop,
    onError: noop,
    onDuration: noop,
    onSeek: noop,
    onProgress: noop,
    onClickPreview: noop,
    onEnablePIP: noop,
    onDisablePIP: noop
  };
  exports.defaultProps = defaultProps;
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/Player.js
var require_Player = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _reactFastCompare = _interopRequireDefault(require_react_fast_compare());
  var _props = require_props();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  __name(_interopRequireDefault, "_interopRequireDefault");
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function _extends() {
    _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends.apply(this, arguments);
  }
  __name(_extends, "_extends");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var SEEK_ON_PLAY_EXPIRY = 5e3;
  var Player = function(_Component) {
    _inherits(Player2, _Component);
    var _super = _createSuper(Player2);
    function Player2() {
      var _this;
      _classCallCheck(this, Player2);
      for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
        _args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(_args));
      _defineProperty(_assertThisInitialized(_this), "mounted", false);
      _defineProperty(_assertThisInitialized(_this), "isReady", false);
      _defineProperty(_assertThisInitialized(_this), "isPlaying", false);
      _defineProperty(_assertThisInitialized(_this), "isLoading", true);
      _defineProperty(_assertThisInitialized(_this), "loadOnReady", null);
      _defineProperty(_assertThisInitialized(_this), "startOnPlay", true);
      _defineProperty(_assertThisInitialized(_this), "seekOnPlay", null);
      _defineProperty(_assertThisInitialized(_this), "onDurationCalled", false);
      _defineProperty(_assertThisInitialized(_this), "handlePlayerMount", function(player) {
        _this.player = player;
        _this.player.load(_this.props.url);
        _this.progress();
      });
      _defineProperty(_assertThisInitialized(_this), "getInternalPlayer", function(key) {
        if (!_this.player)
          return null;
        return _this.player[key];
      });
      _defineProperty(_assertThisInitialized(_this), "progress", function() {
        if (_this.props.url && _this.player && _this.isReady) {
          var playedSeconds = _this.getCurrentTime() || 0;
          var loadedSeconds = _this.getSecondsLoaded();
          var duration = _this.getDuration();
          if (duration) {
            var progress = {
              playedSeconds,
              played: playedSeconds / duration
            };
            if (loadedSeconds !== null) {
              progress.loadedSeconds = loadedSeconds;
              progress.loaded = loadedSeconds / duration;
            }
            if (progress.playedSeconds !== _this.prevPlayed || progress.loadedSeconds !== _this.prevLoaded) {
              _this.props.onProgress(progress);
            }
            _this.prevPlayed = progress.playedSeconds;
            _this.prevLoaded = progress.loadedSeconds;
          }
        }
        _this.progressTimeout = setTimeout(_this.progress, _this.props.progressFrequency || _this.props.progressInterval);
      });
      _defineProperty(_assertThisInitialized(_this), "handleReady", function() {
        if (!_this.mounted)
          return;
        _this.isReady = true;
        _this.isLoading = false;
        var _this$props = _this.props, onReady = _this$props.onReady, playing = _this$props.playing, volume = _this$props.volume, muted = _this$props.muted;
        onReady();
        if (!muted && volume !== null) {
          _this.player.setVolume(volume);
        }
        if (_this.loadOnReady) {
          _this.player.load(_this.loadOnReady, true);
          _this.loadOnReady = null;
        } else if (playing) {
          _this.player.play();
        }
        _this.handleDurationCheck();
      });
      _defineProperty(_assertThisInitialized(_this), "handlePlay", function() {
        _this.isPlaying = true;
        _this.isLoading = false;
        var _this$props2 = _this.props, onStart = _this$props2.onStart, onPlay = _this$props2.onPlay, playbackRate = _this$props2.playbackRate;
        if (_this.startOnPlay) {
          if (_this.player.setPlaybackRate && playbackRate !== 1) {
            _this.player.setPlaybackRate(playbackRate);
          }
          onStart();
          _this.startOnPlay = false;
        }
        onPlay();
        if (_this.seekOnPlay) {
          _this.seekTo(_this.seekOnPlay);
          _this.seekOnPlay = null;
        }
        _this.handleDurationCheck();
      });
      _defineProperty(_assertThisInitialized(_this), "handlePause", function(e) {
        _this.isPlaying = false;
        if (!_this.isLoading) {
          _this.props.onPause(e);
        }
      });
      _defineProperty(_assertThisInitialized(_this), "handleEnded", function() {
        var _this$props3 = _this.props, activePlayer = _this$props3.activePlayer, loop = _this$props3.loop, onEnded = _this$props3.onEnded;
        if (activePlayer.loopOnEnded && loop) {
          _this.seekTo(0);
        }
        if (!loop) {
          _this.isPlaying = false;
          onEnded();
        }
      });
      _defineProperty(_assertThisInitialized(_this), "handleError", function() {
        var _this$props4;
        _this.isLoading = false;
        (_this$props4 = _this.props).onError.apply(_this$props4, arguments);
      });
      _defineProperty(_assertThisInitialized(_this), "handleDurationCheck", function() {
        clearTimeout(_this.durationCheckTimeout);
        var duration = _this.getDuration();
        if (duration) {
          if (!_this.onDurationCalled) {
            _this.props.onDuration(duration);
            _this.onDurationCalled = true;
          }
        } else {
          _this.durationCheckTimeout = setTimeout(_this.handleDurationCheck, 100);
        }
      });
      _defineProperty(_assertThisInitialized(_this), "handleLoaded", function() {
        _this.isLoading = false;
      });
      return _this;
    }
    __name(Player2, "Player");
    _createClass(Player2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.mounted = true;
      }, "componentDidMount")
    }, {
      key: "componentWillUnmount",
      value: /* @__PURE__ */ __name(function componentWillUnmount() {
        clearTimeout(this.progressTimeout);
        clearTimeout(this.durationCheckTimeout);
        if (this.isReady && this.props.stopOnUnmount) {
          this.player.stop();
          if (this.player.disablePIP) {
            this.player.disablePIP();
          }
        }
        this.mounted = false;
      }, "componentWillUnmount")
    }, {
      key: "componentDidUpdate",
      value: /* @__PURE__ */ __name(function componentDidUpdate(prevProps) {
        var _this2 = this;
        if (!this.player) {
          return;
        }
        var _this$props5 = this.props, url = _this$props5.url, playing = _this$props5.playing, volume = _this$props5.volume, muted = _this$props5.muted, playbackRate = _this$props5.playbackRate, pip = _this$props5.pip, loop = _this$props5.loop, activePlayer = _this$props5.activePlayer;
        if (!(0, _reactFastCompare["default"])(prevProps.url, url)) {
          if (this.isLoading && !activePlayer.forceLoad) {
            console.warn("ReactPlayer: the attempt to load ".concat(url, " is being deferred until the player has loaded"));
            this.loadOnReady = url;
            return;
          }
          this.isLoading = true;
          this.startOnPlay = true;
          this.onDurationCalled = false;
          this.player.load(url, this.isReady);
        }
        if (!prevProps.playing && playing && !this.isPlaying) {
          this.player.play();
        }
        if (prevProps.playing && !playing && this.isPlaying) {
          this.player.pause();
        }
        if (!prevProps.pip && pip && this.player.enablePIP) {
          this.player.enablePIP();
        }
        if (prevProps.pip && !pip && this.player.disablePIP) {
          this.player.disablePIP();
        }
        if (prevProps.volume !== volume && volume !== null) {
          this.player.setVolume(volume);
        }
        if (prevProps.muted !== muted) {
          if (muted) {
            this.player.mute();
          } else {
            this.player.unmute();
            if (volume !== null) {
              setTimeout(function() {
                return _this2.player.setVolume(volume);
              });
            }
          }
        }
        if (prevProps.playbackRate !== playbackRate && this.player.setPlaybackRate) {
          this.player.setPlaybackRate(playbackRate);
        }
        if (prevProps.loop !== loop && this.player.setLoop) {
          this.player.setLoop(loop);
        }
      }, "componentDidUpdate")
    }, {
      key: "getDuration",
      value: /* @__PURE__ */ __name(function getDuration() {
        if (!this.isReady)
          return null;
        return this.player.getDuration();
      }, "getDuration")
    }, {
      key: "getCurrentTime",
      value: /* @__PURE__ */ __name(function getCurrentTime() {
        if (!this.isReady)
          return null;
        return this.player.getCurrentTime();
      }, "getCurrentTime")
    }, {
      key: "getSecondsLoaded",
      value: /* @__PURE__ */ __name(function getSecondsLoaded() {
        if (!this.isReady)
          return null;
        return this.player.getSecondsLoaded();
      }, "getSecondsLoaded")
    }, {
      key: "seekTo",
      value: /* @__PURE__ */ __name(function seekTo(amount, type) {
        var _this3 = this;
        if (!this.isReady && amount !== 0) {
          this.seekOnPlay = amount;
          setTimeout(function() {
            _this3.seekOnPlay = null;
          }, SEEK_ON_PLAY_EXPIRY);
          return;
        }
        var isFraction = !type ? amount > 0 && amount < 1 : type === "fraction";
        if (isFraction) {
          var duration = this.player.getDuration();
          if (!duration) {
            console.warn("ReactPlayer: could not seek using fraction \u2013\xA0duration not yet available");
            return;
          }
          this.player.seekTo(duration * amount);
          return;
        }
        this.player.seekTo(amount);
      }, "seekTo")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var Player3 = this.props.activePlayer;
        if (!Player3) {
          return null;
        }
        return _react["default"].createElement(Player3, _extends({}, this.props, {
          onMount: this.handlePlayerMount,
          onReady: this.handleReady,
          onPlay: this.handlePlay,
          onPause: this.handlePause,
          onEnded: this.handleEnded,
          onLoaded: this.handleLoaded,
          onError: this.handleError
        }));
      }, "render")
    }]);
    return Player2;
  }(_react.Component);
  exports["default"] = Player;
  _defineProperty(Player, "displayName", "Player");
  _defineProperty(Player, "propTypes", _props.propTypes);
  _defineProperty(Player, "defaultProps", _props.defaultProps);
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/Preview.js
var require_Preview = __commonJS((exports) => {
  "use strict";
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = _interopRequireWildcard(require_react());
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache2 = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache2;
    }, "_getRequireWildcardCache");
    return cache2;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache2 = _getRequireWildcardCache();
    if (cache2 && cache2.has(obj)) {
      return cache2.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache2) {
      cache2.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly)
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      keys.push.apply(keys, symbols);
    }
    return keys;
  }
  __name(ownKeys, "ownKeys");
  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      if (i % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  __name(_objectSpread, "_objectSpread");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  var ICON_SIZE = "64px";
  var cache = {};
  var Preview = function(_Component) {
    _inherits(Preview2, _Component);
    var _super = _createSuper(Preview2);
    function Preview2() {
      var _this;
      _classCallCheck(this, Preview2);
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _super.call.apply(_super, [this].concat(args));
      _defineProperty(_assertThisInitialized(_this), "mounted", false);
      _defineProperty(_assertThisInitialized(_this), "state", {
        image: null
      });
      _defineProperty(_assertThisInitialized(_this), "handleKeyPress", function(e) {
        if (e.key === "Enter" || e.key === " ") {
          _this.props.onClick();
        }
      });
      return _this;
    }
    __name(Preview2, "Preview");
    _createClass(Preview2, [{
      key: "componentDidMount",
      value: /* @__PURE__ */ __name(function componentDidMount() {
        this.mounted = true;
        this.fetchImage(this.props);
      }, "componentDidMount")
    }, {
      key: "componentDidUpdate",
      value: /* @__PURE__ */ __name(function componentDidUpdate(prevProps) {
        var _this$props = this.props, url = _this$props.url, light = _this$props.light;
        if (prevProps.url !== url || prevProps.light !== light) {
          this.fetchImage(this.props);
        }
      }, "componentDidUpdate")
    }, {
      key: "componentWillUnmount",
      value: /* @__PURE__ */ __name(function componentWillUnmount() {
        this.mounted = false;
      }, "componentWillUnmount")
    }, {
      key: "fetchImage",
      value: /* @__PURE__ */ __name(function fetchImage(_ref) {
        var _this2 = this;
        var url = _ref.url, light = _ref.light;
        if (typeof light === "string") {
          this.setState({
            image: light
          });
          return;
        }
        if (cache[url]) {
          this.setState({
            image: cache[url]
          });
          return;
        }
        this.setState({
          image: null
        });
        return window.fetch("https://noembed.com/embed?url=".concat(url)).then(function(response) {
          return response.json();
        }).then(function(data) {
          if (data.thumbnail_url && _this2.mounted) {
            var image = data.thumbnail_url.replace("height=100", "height=480");
            _this2.setState({
              image
            });
            cache[url] = image;
          }
        });
      }, "fetchImage")
    }, {
      key: "render",
      value: /* @__PURE__ */ __name(function render() {
        var _this$props2 = this.props, onClick = _this$props2.onClick, playIcon = _this$props2.playIcon, previewTabIndex = _this$props2.previewTabIndex;
        var image = this.state.image;
        var flexCenter = {
          display: "flex",
          alignItems: "center",
          justifyContent: "center"
        };
        var styles = {
          preview: _objectSpread({
            width: "100%",
            height: "100%",
            backgroundImage: image ? "url(".concat(image, ")") : void 0,
            backgroundSize: "cover",
            backgroundPosition: "center",
            cursor: "pointer"
          }, flexCenter),
          shadow: _objectSpread({
            background: "radial-gradient(rgb(0, 0, 0, 0.3), rgba(0, 0, 0, 0) 60%)",
            borderRadius: ICON_SIZE,
            width: ICON_SIZE,
            height: ICON_SIZE
          }, flexCenter),
          playIcon: {
            borderStyle: "solid",
            borderWidth: "16px 0 16px 26px",
            borderColor: "transparent transparent transparent white",
            marginLeft: "7px"
          }
        };
        var defaultPlayIcon = _react["default"].createElement("div", {
          style: styles.shadow,
          className: "react-player__shadow"
        }, _react["default"].createElement("div", {
          style: styles.playIcon,
          className: "react-player__play-icon"
        }));
        return _react["default"].createElement("div", {
          style: styles.preview,
          className: "react-player__preview",
          onClick,
          tabIndex: previewTabIndex,
          onKeyPress: this.handleKeyPress
        }, playIcon || defaultPlayIcon);
      }, "render")
    }]);
    return Preview2;
  }(_react.Component);
  exports["default"] = Preview;
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/ReactPlayer.js
var require_ReactPlayer = __commonJS((exports) => {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createReactPlayer = void 0;
  var _react = _interopRequireWildcard(require_react());
  var _deepmerge = _interopRequireDefault(require_cjs());
  var _memoizeOne = _interopRequireDefault(require_memoize_one_esm());
  var _reactFastCompare = _interopRequireDefault(require_react_fast_compare());
  var _props = require_props();
  var _utils = require_utils();
  var _Player3 = _interopRequireDefault(require_Player());
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  __name(_interopRequireDefault, "_interopRequireDefault");
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return typeof obj2;
      }, "_typeof");
    } else {
      _typeof = /* @__PURE__ */ __name(function _typeof2(obj2) {
        return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, "_typeof");
    }
    return _typeof(obj);
  }
  __name(_typeof, "_typeof");
  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly)
        symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
      keys.push.apply(keys, symbols);
    }
    return keys;
  }
  __name(ownKeys, "ownKeys");
  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      if (i % 2) {
        ownKeys(Object(source), true).forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
    return target;
  }
  __name(_objectSpread, "_objectSpread");
  function _extends() {
    _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends.apply(this, arguments);
  }
  __name(_extends, "_extends");
  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
  }
  __name(_toConsumableArray, "_toConsumableArray");
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  __name(_nonIterableSpread, "_nonIterableSpread");
  function _unsupportedIterableToArray(o, minLen) {
    if (!o)
      return;
    if (typeof o === "string")
      return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor)
      n = o.constructor.name;
    if (n === "Map" || n === "Set")
      return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return _arrayLikeToArray(o, minLen);
  }
  __name(_unsupportedIterableToArray, "_unsupportedIterableToArray");
  function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
      return Array.from(iter);
  }
  __name(_iterableToArray, "_iterableToArray");
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr))
      return _arrayLikeToArray(arr);
  }
  __name(_arrayWithoutHoles, "_arrayWithoutHoles");
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length)
      len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  __name(_arrayLikeToArray, "_arrayLikeToArray");
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  __name(_classCallCheck, "_classCallCheck");
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  __name(_defineProperties, "_defineProperties");
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  __name(_createClass, "_createClass");
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {value: subClass, writable: true, configurable: true}});
    if (superClass)
      _setPrototypeOf(subClass, superClass);
  }
  __name(_inherits, "_inherits");
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || /* @__PURE__ */ __name(function _setPrototypeOf2(o2, p2) {
      o2.__proto__ = p2;
      return o2;
    }, "_setPrototypeOf");
    return _setPrototypeOf(o, p);
  }
  __name(_setPrototypeOf, "_setPrototypeOf");
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return /* @__PURE__ */ __name(function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    }, "_createSuperInternal");
  }
  __name(_createSuper, "_createSuper");
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  __name(_possibleConstructorReturn, "_possibleConstructorReturn");
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  __name(_assertThisInitialized, "_assertThisInitialized");
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if (typeof Proxy === "function")
      return true;
    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      }));
      return true;
    } catch (e) {
      return false;
    }
  }
  __name(_isNativeReflectConstruct, "_isNativeReflectConstruct");
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : /* @__PURE__ */ __name(function _getPrototypeOf2(o2) {
      return o2.__proto__ || Object.getPrototypeOf(o2);
    }, "_getPrototypeOf");
    return _getPrototypeOf(o);
  }
  __name(_getPrototypeOf, "_getPrototypeOf");
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {value, enumerable: true, configurable: true, writable: true});
    } else {
      obj[key] = value;
    }
    return obj;
  }
  __name(_defineProperty, "_defineProperty");
  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function")
      return null;
    var cache = new WeakMap();
    _getRequireWildcardCache = /* @__PURE__ */ __name(function _getRequireWildcardCache2() {
      return cache;
    }, "_getRequireWildcardCache");
    return cache;
  }
  __name(_getRequireWildcardCache, "_getRequireWildcardCache");
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }
    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {default: obj};
    }
    var cache = _getRequireWildcardCache();
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj["default"] = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
  __name(_interopRequireWildcard, "_interopRequireWildcard");
  var Preview = (0, _react.lazy)(function() {
    return Promise.resolve().then(function() {
      return _interopRequireWildcard(require_Preview());
    });
  });
  var IS_BROWSER = typeof window !== "undefined" && window.document;
  var IS_GLOBAL = typeof global !== "undefined" && global.window && global.window.document;
  var SUPPORTED_PROPS = Object.keys(_props.propTypes);
  var UniversalSuspense = IS_BROWSER || IS_GLOBAL ? _react.Suspense : function() {
    return null;
  };
  var customPlayers = [];
  var createReactPlayer = /* @__PURE__ */ __name(function createReactPlayer2(players, fallback) {
    var _class, _temp;
    return _temp = _class = function(_Component) {
      _inherits(ReactPlayer, _Component);
      var _super = _createSuper(ReactPlayer);
      function ReactPlayer() {
        var _this;
        _classCallCheck(this, ReactPlayer);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty(_assertThisInitialized(_this), "state", {
          showPreview: !!_this.props.light
        });
        _defineProperty(_assertThisInitialized(_this), "references", {
          wrapper: /* @__PURE__ */ __name(function wrapper(_wrapper) {
            _this.wrapper = _wrapper;
          }, "wrapper"),
          player: /* @__PURE__ */ __name(function player(_player) {
            _this.player = _player;
          }, "player")
        });
        _defineProperty(_assertThisInitialized(_this), "handleClickPreview", function(e) {
          _this.setState({
            showPreview: false
          });
          _this.props.onClickPreview(e);
        });
        _defineProperty(_assertThisInitialized(_this), "showPreview", function() {
          _this.setState({
            showPreview: true
          });
        });
        _defineProperty(_assertThisInitialized(_this), "getDuration", function() {
          if (!_this.player)
            return null;
          return _this.player.getDuration();
        });
        _defineProperty(_assertThisInitialized(_this), "getCurrentTime", function() {
          if (!_this.player)
            return null;
          return _this.player.getCurrentTime();
        });
        _defineProperty(_assertThisInitialized(_this), "getSecondsLoaded", function() {
          if (!_this.player)
            return null;
          return _this.player.getSecondsLoaded();
        });
        _defineProperty(_assertThisInitialized(_this), "getInternalPlayer", function() {
          var key = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "player";
          if (!_this.player)
            return null;
          return _this.player.getInternalPlayer(key);
        });
        _defineProperty(_assertThisInitialized(_this), "seekTo", function(fraction, type) {
          if (!_this.player)
            return null;
          _this.player.seekTo(fraction, type);
        });
        _defineProperty(_assertThisInitialized(_this), "handleReady", function() {
          _this.props.onReady(_assertThisInitialized(_this));
        });
        _defineProperty(_assertThisInitialized(_this), "getActivePlayer", (0, _memoizeOne["default"])(function(url) {
          for (var _i = 0, _arr = [].concat(customPlayers, _toConsumableArray(players)); _i < _arr.length; _i++) {
            var player = _arr[_i];
            if (player.canPlay(url)) {
              return player;
            }
          }
          if (fallback) {
            return fallback;
          }
          return null;
        }));
        _defineProperty(_assertThisInitialized(_this), "getConfig", (0, _memoizeOne["default"])(function(url, key) {
          var config = _this.props.config;
          return _deepmerge["default"].all([_props.defaultProps.config, _props.defaultProps.config[key] || {}, config, config[key] || {}]);
        }));
        _defineProperty(_assertThisInitialized(_this), "getAttributes", (0, _memoizeOne["default"])(function(url) {
          return (0, _utils.omit)(_this.props, SUPPORTED_PROPS);
        }));
        _defineProperty(_assertThisInitialized(_this), "renderActivePlayer", function(url) {
          if (!url)
            return null;
          var player = _this.getActivePlayer(url);
          if (!player)
            return null;
          var config = _this.getConfig(url, player.key);
          return _react["default"].createElement(_Player3["default"], _extends({}, _this.props, {
            key: player.key,
            ref: _this.references.player,
            config,
            activePlayer: player.lazyPlayer || player,
            onReady: _this.handleReady
          }));
        });
        return _this;
      }
      __name(ReactPlayer, "ReactPlayer");
      _createClass(ReactPlayer, [{
        key: "shouldComponentUpdate",
        value: /* @__PURE__ */ __name(function shouldComponentUpdate(nextProps, nextState) {
          return !(0, _reactFastCompare["default"])(this.props, nextProps) || !(0, _reactFastCompare["default"])(this.state, nextState);
        }, "shouldComponentUpdate")
      }, {
        key: "componentDidUpdate",
        value: /* @__PURE__ */ __name(function componentDidUpdate(prevProps) {
          var light = this.props.light;
          if (!prevProps.light && light) {
            this.setState({
              showPreview: true
            });
          }
          if (prevProps.light && !light) {
            this.setState({
              showPreview: false
            });
          }
        }, "componentDidUpdate")
      }, {
        key: "renderPreview",
        value: /* @__PURE__ */ __name(function renderPreview(url) {
          if (!url)
            return null;
          var _this$props = this.props, light = _this$props.light, playIcon = _this$props.playIcon, previewTabIndex = _this$props.previewTabIndex;
          return _react["default"].createElement(Preview, {
            url,
            light,
            playIcon,
            previewTabIndex,
            onClick: this.handleClickPreview
          });
        }, "renderPreview")
      }, {
        key: "render",
        value: /* @__PURE__ */ __name(function render() {
          var _this$props2 = this.props, url = _this$props2.url, style = _this$props2.style, width = _this$props2.width, height = _this$props2.height, fallback2 = _this$props2.fallback, Wrapper = _this$props2.wrapper;
          var showPreview = this.state.showPreview;
          var attributes = this.getAttributes(url);
          return _react["default"].createElement(Wrapper, _extends({
            ref: this.references.wrapper,
            style: _objectSpread(_objectSpread({}, style), {}, {
              width,
              height
            })
          }, attributes), _react["default"].createElement(UniversalSuspense, {
            fallback: fallback2
          }, showPreview ? this.renderPreview(url) : this.renderActivePlayer(url)));
        }, "render")
      }]);
      return ReactPlayer;
    }(_react.Component), _defineProperty(_class, "displayName", "ReactPlayer"), _defineProperty(_class, "propTypes", _props.propTypes), _defineProperty(_class, "defaultProps", _props.defaultProps), _defineProperty(_class, "addCustomPlayer", function(player) {
      customPlayers.push(player);
    }), _defineProperty(_class, "removeCustomPlayers", function() {
      customPlayers.length = 0;
    }), _defineProperty(_class, "canPlay", function(url) {
      for (var _i2 = 0, _arr2 = [].concat(customPlayers, _toConsumableArray(players)); _i2 < _arr2.length; _i2++) {
        var _Player = _arr2[_i2];
        if (_Player.canPlay(url)) {
          return true;
        }
      }
      return false;
    }), _defineProperty(_class, "canEnablePIP", function(url) {
      for (var _i3 = 0, _arr3 = [].concat(customPlayers, _toConsumableArray(players)); _i3 < _arr3.length; _i3++) {
        var _Player2 = _arr3[_i3];
        if (_Player2.canEnablePIP && _Player2.canEnablePIP(url)) {
          return true;
        }
      }
      return false;
    }), _temp;
  }, "createReactPlayer");
  exports.createReactPlayer = createReactPlayer;
});

// ../.yarn/$$virtual/react-player-virtual-244a173c14/0/cache/react-player-npm-2.9.0-a7b73c7c65-32016230af.zip/node_modules/react-player/lib/index.js
var require_lib = __commonJS((exports) => {
  "use strict";
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _players = _interopRequireDefault(require_players());
  var _ReactPlayer = require_ReactPlayer();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {default: obj};
  }
  __name(_interopRequireDefault, "_interopRequireDefault");
  var fallback = _players["default"][_players["default"].length - 1];
  var _default = (0, _ReactPlayer.createReactPlayer)(_players["default"], fallback);
  exports["default"] = _default;
});

// dep:react-player
var react_player_default = require_lib();
export {
  react_player_default as default
};
//# sourceMappingURL=react-player.js.map
