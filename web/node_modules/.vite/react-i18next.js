import {
  _typeof
} from "./chunk.OKR4BANP.js";
import {
  _classCallCheck,
  _createClass
} from "./chunk.75BUXG7X.js";
import {
  __toModule
} from "./chunk.5JD2HCIV.js";
import "./chunk.FNFVRXQK.js";
import {
  require_react
} from "./chunk.BD4KNU7W.js";
import "./chunk.MXG56MB2.js";
import {
  __commonJS
} from "./chunk.5OSL2VXB.js";
import {
  __name
} from "./chunk.C4F35LU4.js";

// ../.yarn/cache/void-elements-npm-2.0.1-85e6962130-768d7e0853.zip/node_modules/void-elements/index.js
var require_void_elements = __commonJS((exports, module) => {
  module.exports = {
    area: true,
    base: true,
    br: true,
    col: true,
    embed: true,
    hr: true,
    img: true,
    input: true,
    keygen: true,
    link: true,
    menuitem: true,
    meta: true,
    param: true,
    source: true,
    track: true,
    wbr: true
  };
});

// ../.yarn/cache/html-parse-stringify2-npm-2.0.1-7f908d984a-71159c76d5.zip/node_modules/html-parse-stringify2/lib/parse-tag.js
var require_parse_tag = __commonJS((exports, module) => {
  var attrRE = /([\w-]+)|=|(['"])([.\s\S]*?)\2/g;
  var voidElements = require_void_elements();
  module.exports = function(tag) {
    var i = 0;
    var key;
    var expectingValueAfterEquals = true;
    var res = {
      type: "tag",
      name: "",
      voidElement: false,
      attrs: {},
      children: []
    };
    tag.replace(attrRE, function(match) {
      if (match === "=") {
        expectingValueAfterEquals = true;
        i++;
        return;
      }
      if (!expectingValueAfterEquals) {
        if (key) {
          res.attrs[key] = key;
        }
        key = match;
      } else {
        if (i === 0) {
          if (voidElements[match] || tag.charAt(tag.length - 2) === "/") {
            res.voidElement = true;
          }
          res.name = match;
        } else {
          res.attrs[key] = match.replace(/^['"]|['"]$/g, "");
          key = void 0;
        }
      }
      i++;
      expectingValueAfterEquals = false;
    });
    return res;
  };
});

// ../.yarn/cache/html-parse-stringify2-npm-2.0.1-7f908d984a-71159c76d5.zip/node_modules/html-parse-stringify2/lib/parse.js
var require_parse = __commonJS((exports, module) => {
  var tagRE = /(?:<!--[\S\s]*?-->|<(?:"[^"]*"['"]*|'[^']*'['"]*|[^'">])+>)/g;
  var parseTag = require_parse_tag();
  var empty = Object.create ? Object.create(null) : {};
  function pushTextNode(list, html, level, start, ignoreWhitespace) {
    var end = html.indexOf("<", start);
    var content = html.slice(start, end === -1 ? void 0 : end);
    if (/^\s*$/.test(content)) {
      content = " ";
    }
    if (!ignoreWhitespace && end > -1 && level + list.length >= 0 || content !== " ") {
      list.push({
        type: "text",
        content
      });
    }
  }
  __name(pushTextNode, "pushTextNode");
  module.exports = /* @__PURE__ */ __name(function parse(html, options) {
    options || (options = {});
    options.components || (options.components = empty);
    var result = [];
    var current;
    var level = -1;
    var arr = [];
    var byTag = {};
    var inComponent = false;
    html.replace(tagRE, function(tag, index) {
      if (inComponent) {
        if (tag !== "</" + current.name + ">") {
          return;
        } else {
          inComponent = false;
        }
      }
      var isOpen = tag.charAt(1) !== "/";
      var isComment = tag.indexOf("<!--") === 0;
      var start = index + tag.length;
      var nextChar = html.charAt(start);
      var parent;
      if (isOpen && !isComment) {
        level++;
        current = parseTag(tag);
        if (current.type === "tag" && options.components[current.name]) {
          current.type = "component";
          inComponent = true;
        }
        if (!current.voidElement && !inComponent && nextChar && nextChar !== "<") {
          pushTextNode(current.children, html, level, start, options.ignoreWhitespace);
        }
        byTag[current.tagName] = current;
        if (level === 0) {
          result.push(current);
        }
        parent = arr[level - 1];
        if (parent) {
          parent.children.push(current);
        }
        arr[level] = current;
      }
      if (isComment || !isOpen || current.voidElement) {
        if (!isComment) {
          level--;
        }
        if (!inComponent && nextChar !== "<" && nextChar) {
          parent = level === -1 ? result : arr[level].children;
          pushTextNode(parent, html, level, start, options.ignoreWhitespace);
        }
      }
    });
    if (!result.length && html.length) {
      pushTextNode(result, html, 0, 0, options.ignoreWhitespace);
    }
    return result;
  }, "parse");
});

// ../.yarn/cache/html-parse-stringify2-npm-2.0.1-7f908d984a-71159c76d5.zip/node_modules/html-parse-stringify2/lib/stringify.js
var require_stringify = __commonJS((exports, module) => {
  function attrString(attrs) {
    var buff = [];
    for (var key in attrs) {
      buff.push(key + '="' + attrs[key] + '"');
    }
    if (!buff.length) {
      return "";
    }
    return " " + buff.join(" ");
  }
  __name(attrString, "attrString");
  function stringify(buff, doc) {
    switch (doc.type) {
      case "text":
        return buff + doc.content;
      case "tag":
        buff += "<" + doc.name + (doc.attrs ? attrString(doc.attrs) : "") + (doc.voidElement ? "/>" : ">");
        if (doc.voidElement) {
          return buff;
        }
        return buff + doc.children.reduce(stringify, "") + "</" + doc.name + ">";
    }
  }
  __name(stringify, "stringify");
  module.exports = function(doc) {
    return doc.reduce(function(token, rootEl) {
      return token + stringify("", rootEl);
    }, "");
  };
});

// ../.yarn/cache/html-parse-stringify2-npm-2.0.1-7f908d984a-71159c76d5.zip/node_modules/html-parse-stringify2/index.js
var require_html_parse_stringify2 = __commonJS((exports, module) => {
  module.exports = {
    parse: require_parse(),
    stringify: require_stringify()
  };
});

// ../.yarn/cache/@babel-runtime-npm-7.13.10-d9a6e8f765-22014226b9.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
__name(_objectWithoutPropertiesLoose, "_objectWithoutPropertiesLoose");

// ../.yarn/cache/@babel-runtime-npm-7.13.10-d9a6e8f765-22014226b9.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
__name(_objectWithoutProperties, "_objectWithoutProperties");

// ../.yarn/cache/@babel-runtime-npm-7.13.10-d9a6e8f765-22014226b9.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
__name(_defineProperty, "_defineProperty");

// ../.yarn/$$virtual/react-i18next-virtual-d17cd3e6c9/0/cache/react-i18next-npm-11.8.12-35838cd3a3-dfb947c8ec.zip/node_modules/react-i18next/dist/es/Trans.js
var import_react2 = __toModule(require_react());
var import_html_parse_stringify2 = __toModule(require_html_parse_stringify2());

// ../.yarn/$$virtual/react-i18next-virtual-d17cd3e6c9/0/cache/react-i18next-npm-11.8.12-35838cd3a3-dfb947c8ec.zip/node_modules/react-i18next/dist/es/context.js
var import_react = __toModule(require_react());
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
__name(ownKeys, "ownKeys");
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
__name(_objectSpread, "_objectSpread");
var defaultOptions = {
  bindI18n: "languageChanged",
  bindI18nStore: "",
  transEmptyNodeValue: "",
  transSupportBasicHtmlNodes: true,
  transKeepBasicHtmlNodesFor: ["br", "strong", "i", "p"],
  useSuspense: true
};
var i18nInstance;
var I18nContext = import_react.default.createContext();
function setDefaults() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  defaultOptions = _objectSpread(_objectSpread({}, defaultOptions), options);
}
__name(setDefaults, "setDefaults");
function getDefaults() {
  return defaultOptions;
}
__name(getDefaults, "getDefaults");
var ReportNamespaces = function() {
  function ReportNamespaces2() {
    _classCallCheck(this, ReportNamespaces2);
    this.usedNamespaces = {};
  }
  __name(ReportNamespaces2, "ReportNamespaces");
  _createClass(ReportNamespaces2, [{
    key: "addUsedNamespaces",
    value: /* @__PURE__ */ __name(function addUsedNamespaces(namespaces) {
      var _this = this;
      namespaces.forEach(function(ns) {
        if (!_this.usedNamespaces[ns])
          _this.usedNamespaces[ns] = true;
      });
    }, "addUsedNamespaces")
  }, {
    key: "getUsedNamespaces",
    value: /* @__PURE__ */ __name(function getUsedNamespaces() {
      return Object.keys(this.usedNamespaces);
    }, "getUsedNamespaces")
  }]);
  return ReportNamespaces2;
}();
function setI18n(instance) {
  i18nInstance = instance;
}
__name(setI18n, "setI18n");
function getI18n() {
  return i18nInstance;
}
__name(getI18n, "getI18n");
var initReactI18next = {
  type: "3rdParty",
  init: /* @__PURE__ */ __name(function init(instance) {
    setDefaults(instance.options.react);
    setI18n(instance);
  }, "init")
};
function composeInitialProps(ForComponent) {
  return function(ctx) {
    return new Promise(function(resolve) {
      var i18nInitialProps = getInitialProps();
      if (ForComponent.getInitialProps) {
        ForComponent.getInitialProps(ctx).then(function(componentsInitialProps) {
          resolve(_objectSpread(_objectSpread({}, componentsInitialProps), i18nInitialProps));
        });
      } else {
        resolve(i18nInitialProps);
      }
    });
  };
}
__name(composeInitialProps, "composeInitialProps");
function getInitialProps() {
  var i18n = getI18n();
  var namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];
  var ret = {};
  var initialI18nStore = {};
  i18n.languages.forEach(function(l) {
    initialI18nStore[l] = {};
    namespaces.forEach(function(ns) {
      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};
    });
  });
  ret.initialI18nStore = initialI18nStore;
  ret.initialLanguage = i18n.language;
  return ret;
}
__name(getInitialProps, "getInitialProps");

// ../.yarn/$$virtual/react-i18next-virtual-d17cd3e6c9/0/cache/react-i18next-npm-11.8.12-35838cd3a3-dfb947c8ec.zip/node_modules/react-i18next/dist/es/utils.js
function warn() {
  if (console && console.warn) {
    var _console;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (typeof args[0] === "string")
      args[0] = "react-i18next:: ".concat(args[0]);
    (_console = console).warn.apply(_console, args);
  }
}
__name(warn, "warn");
var alreadyWarned = {};
function warnOnce() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }
  if (typeof args[0] === "string" && alreadyWarned[args[0]])
    return;
  if (typeof args[0] === "string")
    alreadyWarned[args[0]] = new Date();
  warn.apply(void 0, args);
}
__name(warnOnce, "warnOnce");
function loadNamespaces(i18n, ns, cb) {
  i18n.loadNamespaces(ns, function() {
    if (i18n.isInitialized) {
      cb();
    } else {
      var initialized = /* @__PURE__ */ __name(function initialized2() {
        setTimeout(function() {
          i18n.off("initialized", initialized2);
        }, 0);
        cb();
      }, "initialized");
      i18n.on("initialized", initialized);
    }
  });
}
__name(loadNamespaces, "loadNamespaces");
function hasLoadedNamespace(ns, i18n) {
  var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (!i18n.languages || !i18n.languages.length) {
    warnOnce("i18n.languages were undefined or empty", i18n.languages);
    return true;
  }
  var lng = i18n.languages[0];
  var fallbackLng = i18n.options ? i18n.options.fallbackLng : false;
  var lastLng = i18n.languages[i18n.languages.length - 1];
  if (lng.toLowerCase() === "cimode")
    return true;
  var loadNotPending = /* @__PURE__ */ __name(function loadNotPending2(l, n) {
    var loadState = i18n.services.backendConnector.state["".concat(l, "|").concat(n)];
    return loadState === -1 || loadState === 2;
  }, "loadNotPending");
  if (options.bindI18n && options.bindI18n.indexOf("languageChanging") > -1 && i18n.services.backendConnector.backend && i18n.isLanguageChangingTo && !loadNotPending(i18n.isLanguageChangingTo, ns))
    return false;
  if (i18n.hasResourceBundle(lng, ns))
    return true;
  if (!i18n.services.backendConnector.backend)
    return true;
  if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns)))
    return true;
  return false;
}
__name(hasLoadedNamespace, "hasLoadedNamespace");
function getDisplayName(Component) {
  return Component.displayName || Component.name || (typeof Component === "string" && Component.length > 0 ? Component : "Unknown");
}
__name(getDisplayName, "getDisplayName");

// ../.yarn/$$virtual/react-i18next-virtual-d17cd3e6c9/0/cache/react-i18next-npm-11.8.12-35838cd3a3-dfb947c8ec.zip/node_modules/react-i18next/dist/es/Trans.js
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
__name(ownKeys2, "ownKeys");
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys2(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys2(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
__name(_objectSpread2, "_objectSpread");
function hasChildren(node, checkLength) {
  if (!node)
    return false;
  var base = node.props ? node.props.children : node.children;
  if (checkLength)
    return base.length > 0;
  return !!base;
}
__name(hasChildren, "hasChildren");
function getChildren(node) {
  if (!node)
    return [];
  return node && node.children ? node.children : node.props && node.props.children;
}
__name(getChildren, "getChildren");
function hasValidReactChildren(children) {
  if (Object.prototype.toString.call(children) !== "[object Array]")
    return false;
  return children.every(function(child) {
    return import_react2.default.isValidElement(child);
  });
}
__name(hasValidReactChildren, "hasValidReactChildren");
function getAsArray(data) {
  return Array.isArray(data) ? data : [data];
}
__name(getAsArray, "getAsArray");
function mergeProps(source, target) {
  var newTarget = _objectSpread2({}, target);
  newTarget.props = Object.assign(source.props, target.props);
  return newTarget;
}
__name(mergeProps, "mergeProps");
function nodesToString(children, i18nOptions) {
  if (!children)
    return "";
  var stringNode = "";
  var childrenArray = getAsArray(children);
  var keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];
  childrenArray.forEach(function(child, childIndex) {
    if (typeof child === "string") {
      stringNode += "".concat(child);
    } else if (import_react2.default.isValidElement(child)) {
      var childPropsCount = Object.keys(child.props).length;
      var shouldKeepChild = keepArray.indexOf(child.type) > -1;
      var childChildren = child.props.children;
      if (!childChildren && shouldKeepChild && childPropsCount === 0) {
        stringNode += "<".concat(child.type, "/>");
      } else if (!childChildren && (!shouldKeepChild || childPropsCount !== 0)) {
        stringNode += "<".concat(childIndex, "></").concat(childIndex, ">");
      } else if (child.props.i18nIsDynamicList) {
        stringNode += "<".concat(childIndex, "></").concat(childIndex, ">");
      } else if (shouldKeepChild && childPropsCount === 1 && typeof childChildren === "string") {
        stringNode += "<".concat(child.type, ">").concat(childChildren, "</").concat(child.type, ">");
      } else {
        var content = nodesToString(childChildren, i18nOptions);
        stringNode += "<".concat(childIndex, ">").concat(content, "</").concat(childIndex, ">");
      }
    } else if (_typeof(child) === "object") {
      var format = child.format, clone = _objectWithoutProperties(child, ["format"]);
      var keys = Object.keys(clone);
      if (keys.length === 1) {
        var value = format ? "".concat(keys[0], ", ").concat(format) : keys[0];
        stringNode += "{{".concat(value, "}}");
      } else {
        warn("react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.", child);
      }
    } else {
      warn("Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.", child);
    }
  });
  return stringNode;
}
__name(nodesToString, "nodesToString");
function renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts) {
  if (targetString === "")
    return [];
  var keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];
  var emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.join("|")).test(targetString);
  if (!children && !emptyChildrenButNeedsHandling)
    return [targetString];
  var data = {};
  function getData(childs) {
    var childrenArray = getAsArray(childs);
    childrenArray.forEach(function(child) {
      if (typeof child === "string")
        return;
      if (hasChildren(child))
        getData(getChildren(child));
      else if (_typeof(child) === "object" && !import_react2.default.isValidElement(child))
        Object.assign(data, child);
    });
  }
  __name(getData, "getData");
  getData(children);
  var interpolatedString = i18n.services.interpolator.interpolate(targetString, _objectSpread2(_objectSpread2({}, data), combinedTOpts), i18n.language);
  var ast = import_html_parse_stringify2.default.parse("<0>".concat(interpolatedString, "</0>"));
  function renderInner(child, node, rootReactNode) {
    var childs = getChildren(child);
    var mappedChildren = mapAST(childs, node.children, rootReactNode);
    return hasValidReactChildren(childs) && mappedChildren.length === 0 ? childs : mappedChildren;
  }
  __name(renderInner, "renderInner");
  function pushTranslatedJSX(child, inner, mem, i, isVoid) {
    if (child.dummy)
      child.children = inner;
    mem.push(import_react2.default.cloneElement(child, _objectSpread2(_objectSpread2({}, child.props), {}, {
      key: i
    }), isVoid ? void 0 : inner));
  }
  __name(pushTranslatedJSX, "pushTranslatedJSX");
  function mapAST(reactNode, astNode, rootReactNode) {
    var reactNodes = getAsArray(reactNode);
    var astNodes = getAsArray(astNode);
    return astNodes.reduce(function(mem, node, i) {
      var translationContent = node.children && node.children[0] && node.children[0].content;
      if (node.type === "tag") {
        var tmp = reactNodes[parseInt(node.name, 10)];
        if (!tmp && rootReactNode.length === 1 && rootReactNode[0][node.name])
          tmp = rootReactNode[0][node.name];
        if (!tmp)
          tmp = {};
        var child = Object.keys(node.attrs).length !== 0 ? mergeProps({
          props: node.attrs
        }, tmp) : tmp;
        var isElement = import_react2.default.isValidElement(child);
        var isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;
        var isEmptyTransWithHTML = emptyChildrenButNeedsHandling && _typeof(child) === "object" && child.dummy && !isElement;
        var isKnownComponent = _typeof(children) === "object" && children !== null && Object.hasOwnProperty.call(children, node.name);
        if (typeof child === "string") {
          mem.push(child);
        } else if (hasChildren(child) || isValidTranslationWithChildren) {
          var inner = renderInner(child, node, rootReactNode);
          pushTranslatedJSX(child, inner, mem, i);
        } else if (isEmptyTransWithHTML) {
          var _inner = mapAST(reactNodes, node.children, rootReactNode);
          mem.push(import_react2.default.cloneElement(child, _objectSpread2(_objectSpread2({}, child.props), {}, {
            key: i
          }), _inner));
        } else if (Number.isNaN(parseFloat(node.name))) {
          if (isKnownComponent) {
            var _inner2 = renderInner(child, node, rootReactNode);
            pushTranslatedJSX(child, _inner2, mem, i, node.voidElement);
          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {
            if (node.voidElement) {
              mem.push(import_react2.default.createElement(node.name, {
                key: "".concat(node.name, "-").concat(i)
              }));
            } else {
              var _inner3 = mapAST(reactNodes, node.children, rootReactNode);
              mem.push(import_react2.default.createElement(node.name, {
                key: "".concat(node.name, "-").concat(i)
              }, _inner3));
            }
          } else if (node.voidElement) {
            mem.push("<".concat(node.name, " />"));
          } else {
            var _inner4 = mapAST(reactNodes, node.children, rootReactNode);
            mem.push("<".concat(node.name, ">").concat(_inner4, "</").concat(node.name, ">"));
          }
        } else if (_typeof(child) === "object" && !isElement) {
          var content = node.children[0] ? translationContent : null;
          if (content)
            mem.push(content);
        } else if (node.children.length === 1 && translationContent) {
          mem.push(import_react2.default.cloneElement(child, _objectSpread2(_objectSpread2({}, child.props), {}, {
            key: i
          }), translationContent));
        } else {
          mem.push(import_react2.default.cloneElement(child, _objectSpread2(_objectSpread2({}, child.props), {}, {
            key: i
          })));
        }
      } else if (node.type === "text") {
        mem.push(node.content);
      }
      return mem;
    }, []);
  }
  __name(mapAST, "mapAST");
  var result = mapAST([{
    dummy: true,
    children
  }], ast, getAsArray(children || []));
  return getChildren(result[0]);
}
__name(renderNodes, "renderNodes");
function Trans(_ref) {
  var children = _ref.children, count = _ref.count, parent = _ref.parent, i18nKey = _ref.i18nKey, _ref$tOptions = _ref.tOptions, tOptions = _ref$tOptions === void 0 ? {} : _ref$tOptions, values = _ref.values, defaults = _ref.defaults, components = _ref.components, ns = _ref.ns, i18nFromProps = _ref.i18n, tFromProps = _ref.t, additionalProps = _objectWithoutProperties(_ref, ["children", "count", "parent", "i18nKey", "tOptions", "values", "defaults", "components", "ns", "i18n", "t"]);
  var _ref2 = (0, import_react2.useContext)(I18nContext) || {}, i18nFromContext = _ref2.i18n, defaultNSFromContext = _ref2.defaultNS;
  var i18n = i18nFromProps || i18nFromContext || getI18n();
  if (!i18n) {
    warnOnce("You will need to pass in an i18next instance by using i18nextReactModule");
    return children;
  }
  var t = tFromProps || i18n.t.bind(i18n) || function(k) {
    return k;
  };
  var reactI18nextOptions = _objectSpread2(_objectSpread2({}, getDefaults()), i18n.options && i18n.options.react);
  var namespaces = ns || t.ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;
  namespaces = typeof namespaces === "string" ? [namespaces] : namespaces || ["translation"];
  var defaultValue = defaults || nodesToString(children, reactI18nextOptions) || reactI18nextOptions.transEmptyNodeValue || i18nKey;
  var hashTransKey = reactI18nextOptions.hashTransKey;
  var key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);
  var interpolationOverride = values ? tOptions.interpolation : {
    interpolation: _objectSpread2(_objectSpread2({}, tOptions.interpolation), {}, {
      prefix: "#$?",
      suffix: "?$#"
    })
  };
  var combinedTOpts = _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, tOptions), {}, {
    count
  }, values), interpolationOverride), {}, {
    defaultValue,
    ns: namespaces
  });
  var translation = key ? t(key, combinedTOpts) : defaultValue;
  var content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts);
  var useAsParent = parent !== void 0 ? parent : reactI18nextOptions.defaultTransParent;
  return useAsParent ? import_react2.default.createElement(useAsParent, additionalProps, content) : content;
}
__name(Trans, "Trans");

// ../.yarn/cache/@babel-runtime-npm-7.13.10-d9a6e8f765-22014226b9.zip/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
__name(_arrayWithHoles, "_arrayWithHoles");

// ../.yarn/cache/@babel-runtime-npm-7.13.10-d9a6e8f765-22014226b9.zip/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
__name(_iterableToArrayLimit, "_iterableToArrayLimit");

// ../.yarn/cache/@babel-runtime-npm-7.13.10-d9a6e8f765-22014226b9.zip/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
__name(_arrayLikeToArray, "_arrayLikeToArray");

// ../.yarn/cache/@babel-runtime-npm-7.13.10-d9a6e8f765-22014226b9.zip/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
__name(_unsupportedIterableToArray, "_unsupportedIterableToArray");

// ../.yarn/cache/@babel-runtime-npm-7.13.10-d9a6e8f765-22014226b9.zip/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
__name(_nonIterableRest, "_nonIterableRest");

// ../.yarn/cache/@babel-runtime-npm-7.13.10-d9a6e8f765-22014226b9.zip/node_modules/@babel/runtime/helpers/esm/slicedToArray.js
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
__name(_slicedToArray, "_slicedToArray");

// ../.yarn/$$virtual/react-i18next-virtual-d17cd3e6c9/0/cache/react-i18next-npm-11.8.12-35838cd3a3-dfb947c8ec.zip/node_modules/react-i18next/dist/es/useTranslation.js
var import_react3 = __toModule(require_react());
function ownKeys3(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
__name(ownKeys3, "ownKeys");
function _objectSpread3(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys3(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys3(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
__name(_objectSpread3, "_objectSpread");
function useTranslation(ns) {
  var props = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var i18nFromProps = props.i18n;
  var _ref = (0, import_react3.useContext)(I18nContext) || {}, i18nFromContext = _ref.i18n, defaultNSFromContext = _ref.defaultNS;
  var i18n = i18nFromProps || i18nFromContext || getI18n();
  if (i18n && !i18n.reportNamespaces)
    i18n.reportNamespaces = new ReportNamespaces();
  if (!i18n) {
    warnOnce("You will need to pass in an i18next instance by using initReactI18next");
    var notReadyT = /* @__PURE__ */ __name(function notReadyT2(k) {
      return Array.isArray(k) ? k[k.length - 1] : k;
    }, "notReadyT");
    var retNotReady = [notReadyT, {}, false];
    retNotReady.t = notReadyT;
    retNotReady.i18n = {};
    retNotReady.ready = false;
    return retNotReady;
  }
  if (i18n.options.react && i18n.options.react.wait !== void 0)
    warnOnce("It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");
  var i18nOptions = _objectSpread3(_objectSpread3(_objectSpread3({}, getDefaults()), i18n.options.react), props);
  var useSuspense = i18nOptions.useSuspense;
  var namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;
  namespaces = typeof namespaces === "string" ? [namespaces] : namespaces || ["translation"];
  if (i18n.reportNamespaces.addUsedNamespaces)
    i18n.reportNamespaces.addUsedNamespaces(namespaces);
  var ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(function(n) {
    return hasLoadedNamespace(n, i18n, i18nOptions);
  });
  function getT() {
    return i18n.getFixedT(null, i18nOptions.nsMode === "fallback" ? namespaces : namespaces[0]);
  }
  __name(getT, "getT");
  var _useState = (0, import_react3.useState)(getT), _useState2 = _slicedToArray(_useState, 2), t = _useState2[0], setT = _useState2[1];
  var isMounted = (0, import_react3.useRef)(true);
  (0, import_react3.useEffect)(function() {
    var bindI18n = i18nOptions.bindI18n, bindI18nStore = i18nOptions.bindI18nStore;
    isMounted.current = true;
    if (!ready && !useSuspense) {
      loadNamespaces(i18n, namespaces, function() {
        if (isMounted.current)
          setT(getT);
      });
    }
    function boundReset() {
      if (isMounted.current)
        setT(getT);
    }
    __name(boundReset, "boundReset");
    if (bindI18n && i18n)
      i18n.on(bindI18n, boundReset);
    if (bindI18nStore && i18n)
      i18n.store.on(bindI18nStore, boundReset);
    return function() {
      isMounted.current = false;
      if (bindI18n && i18n)
        bindI18n.split(" ").forEach(function(e) {
          return i18n.off(e, boundReset);
        });
      if (bindI18nStore && i18n)
        bindI18nStore.split(" ").forEach(function(e) {
          return i18n.store.off(e, boundReset);
        });
    };
  }, [i18n, namespaces.join()]);
  var isInitial = (0, import_react3.useRef)(true);
  (0, import_react3.useEffect)(function() {
    if (isMounted.current && !isInitial.current) {
      setT(getT);
    }
    isInitial.current = false;
  }, [i18n]);
  var ret = [t, i18n, ready];
  ret.t = t;
  ret.i18n = i18n;
  ret.ready = ready;
  if (ready)
    return ret;
  if (!ready && !useSuspense)
    return ret;
  throw new Promise(function(resolve) {
    loadNamespaces(i18n, namespaces, function() {
      resolve();
    });
  });
}
__name(useTranslation, "useTranslation");

// ../.yarn/$$virtual/react-i18next-virtual-d17cd3e6c9/0/cache/react-i18next-npm-11.8.12-35838cd3a3-dfb947c8ec.zip/node_modules/react-i18next/dist/es/withTranslation.js
var import_react4 = __toModule(require_react());
function ownKeys4(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
__name(ownKeys4, "ownKeys");
function _objectSpread4(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys4(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys4(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
__name(_objectSpread4, "_objectSpread");
function withTranslation(ns) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return /* @__PURE__ */ __name(function Extend(WrappedComponent) {
    function I18nextWithTranslation(_ref) {
      var forwardedRef = _ref.forwardedRef, rest = _objectWithoutProperties(_ref, ["forwardedRef"]);
      var _useTranslation = useTranslation(ns, rest), _useTranslation2 = _slicedToArray(_useTranslation, 3), t = _useTranslation2[0], i18n = _useTranslation2[1], ready = _useTranslation2[2];
      var passDownProps = _objectSpread4(_objectSpread4({}, rest), {}, {
        t,
        i18n,
        tReady: ready
      });
      if (options.withRef && forwardedRef) {
        passDownProps.ref = forwardedRef;
      } else if (!options.withRef && forwardedRef) {
        passDownProps.forwardedRef = forwardedRef;
      }
      return import_react4.default.createElement(WrappedComponent, passDownProps);
    }
    __name(I18nextWithTranslation, "I18nextWithTranslation");
    I18nextWithTranslation.displayName = "withI18nextTranslation(".concat(getDisplayName(WrappedComponent), ")");
    I18nextWithTranslation.WrappedComponent = WrappedComponent;
    var forwardRef = /* @__PURE__ */ __name(function forwardRef2(props, ref) {
      return import_react4.default.createElement(I18nextWithTranslation, Object.assign({}, props, {
        forwardedRef: ref
      }));
    }, "forwardRef");
    return options.withRef ? import_react4.default.forwardRef(forwardRef) : I18nextWithTranslation;
  }, "Extend");
}
__name(withTranslation, "withTranslation");

// ../.yarn/$$virtual/react-i18next-virtual-d17cd3e6c9/0/cache/react-i18next-npm-11.8.12-35838cd3a3-dfb947c8ec.zip/node_modules/react-i18next/dist/es/Translation.js
function Translation(props) {
  var ns = props.ns, children = props.children, options = _objectWithoutProperties(props, ["ns", "children"]);
  var _useTranslation = useTranslation(ns, options), _useTranslation2 = _slicedToArray(_useTranslation, 3), t = _useTranslation2[0], i18n = _useTranslation2[1], ready = _useTranslation2[2];
  return children(t, {
    i18n,
    lng: i18n.language
  }, ready);
}
__name(Translation, "Translation");

// ../.yarn/$$virtual/react-i18next-virtual-d17cd3e6c9/0/cache/react-i18next-npm-11.8.12-35838cd3a3-dfb947c8ec.zip/node_modules/react-i18next/dist/es/I18nextProvider.js
var import_react5 = __toModule(require_react());
function I18nextProvider(_ref) {
  var i18n = _ref.i18n, defaultNS = _ref.defaultNS, children = _ref.children;
  var value = (0, import_react5.useMemo)(function() {
    return {
      i18n,
      defaultNS
    };
  }, [i18n, defaultNS]);
  return (0, import_react5.createElement)(I18nContext.Provider, {
    value
  }, children);
}
__name(I18nextProvider, "I18nextProvider");

// ../.yarn/$$virtual/react-i18next-virtual-d17cd3e6c9/0/cache/react-i18next-npm-11.8.12-35838cd3a3-dfb947c8ec.zip/node_modules/react-i18next/dist/es/withSSR.js
var import_react7 = __toModule(require_react());

// ../.yarn/$$virtual/react-i18next-virtual-d17cd3e6c9/0/cache/react-i18next-npm-11.8.12-35838cd3a3-dfb947c8ec.zip/node_modules/react-i18next/dist/es/useSSR.js
var import_react6 = __toModule(require_react());
function useSSR(initialI18nStore, initialLanguage) {
  var props = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  var i18nFromProps = props.i18n;
  var _ref = (0, import_react6.useContext)(I18nContext) || {}, i18nFromContext = _ref.i18n;
  var i18n = i18nFromProps || i18nFromContext || getI18n();
  if (i18n.options && i18n.options.isClone)
    return;
  if (initialI18nStore && !i18n.initializedStoreOnce) {
    i18n.services.resourceStore.data = initialI18nStore;
    i18n.options.ns = Object.values(initialI18nStore).reduce(function(mem, lngResources) {
      Object.keys(lngResources).forEach(function(ns) {
        if (mem.indexOf(ns) < 0)
          mem.push(ns);
      });
      return mem;
    }, i18n.options.ns);
    i18n.initializedStoreOnce = true;
    i18n.isInitialized = true;
  }
  if (initialLanguage && !i18n.initializedLanguageOnce) {
    i18n.changeLanguage(initialLanguage);
    i18n.initializedLanguageOnce = true;
  }
}
__name(useSSR, "useSSR");

// ../.yarn/$$virtual/react-i18next-virtual-d17cd3e6c9/0/cache/react-i18next-npm-11.8.12-35838cd3a3-dfb947c8ec.zip/node_modules/react-i18next/dist/es/withSSR.js
function ownKeys5(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
__name(ownKeys5, "ownKeys");
function _objectSpread5(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys5(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys5(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
__name(_objectSpread5, "_objectSpread");
function withSSR() {
  return /* @__PURE__ */ __name(function Extend(WrappedComponent) {
    function I18nextWithSSR(_ref) {
      var initialI18nStore = _ref.initialI18nStore, initialLanguage = _ref.initialLanguage, rest = _objectWithoutProperties(_ref, ["initialI18nStore", "initialLanguage"]);
      useSSR(initialI18nStore, initialLanguage);
      return import_react7.default.createElement(WrappedComponent, _objectSpread5({}, rest));
    }
    __name(I18nextWithSSR, "I18nextWithSSR");
    I18nextWithSSR.getInitialProps = composeInitialProps(WrappedComponent);
    I18nextWithSSR.displayName = "withI18nextSSR(".concat(getDisplayName(WrappedComponent), ")");
    I18nextWithSSR.WrappedComponent = WrappedComponent;
    return I18nextWithSSR;
  }, "Extend");
}
__name(withSSR, "withSSR");
export {
  I18nContext,
  I18nextProvider,
  Trans,
  Translation,
  composeInitialProps,
  getDefaults,
  getI18n,
  getInitialProps,
  initReactI18next,
  setDefaults,
  setI18n,
  useSSR,
  useTranslation,
  withSSR,
  withTranslation
};
//# sourceMappingURL=react-i18next.js.map
