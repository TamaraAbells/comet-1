name: Update Staging

on:
  push:
    branches:
      - staging
  workflow_dispatch:
    inputs:
      message:
        description: Message
        required: true

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

  prep:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout staging
        uses: actions/checkout@v2
        with:
          ref: staging
      - name: Copy docker-compose files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.STAGING_DROPLET_HOST }}
          username: root
          key: ${{ secrets.DROPLET_KEY }}
          passphrase: ${{ secrets.DROPLET_PASSPHRASE }}
          port: 22
          source: "docker-compose.staging.yml"
          target: ${{ github.event.repository.name }}
      - name: Rename docker-compose file and prune Docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_DROPLET_HOST }}
          username: root
          key: ${{ secrets.DROPLET_KEY }}
          passphrase: ${{ secrets.DROPLET_PASSPHRASE }}
          port: 22
          script_stop: true
          script: |
            mv docker-compose.staging.yml docker-compose.yml
            docker system prune -f

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout staging
        uses: actions/checkout@v2
        with:
          ref: staging
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      - name: Build container image
        run: docker buildx build -t registry.digitalocean.com/cometx/cometx:staging
      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/cometx/cometx

  nginx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout staging
        uses: actions/checkout@v2
        with:
          ref: staging
      - name: Copy SSL certs
        run: 'echo -e "$SSL_KEY" > ./nginx/key.pem'
        shell: bash
        env:
          SSL_KEY: ${{ secrets.SSL_KEY }}
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      - name: Build container image
        run: docker buildx build ./nginx -t registry.digitalocean.com/cometx/nginx:staging
      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/cometx/nginx

  deploy:
    needs: [prep, build, nginx]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout staging
        uses: actions/checkout@v2
        with:
          ref: staging

      - name: Start containers
        uses: appleboy/ssh-action@master
        env:
          ENV: |
            ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
            BUCKET=${{ secrets.STAGING_BUCKET }}
            MEDIA_DOMAIN=${{ secrets.STAGING_MEDIA_DOMAIN }}
            AWS_ENDPOINT=${{ secrets.AWS_ENDPOINT }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            DATABASE_NAME=${{ secrets.STAGING_DATABASE_NAME }}
            DOMAIN=${{ secrets.STAGING_DOMAIN }}
        with:
          envs: ENV
          host: ${{ secrets.STAGING_DROPLET_HOST }}
          username: root
          key: ${{ secrets.DROPLET_KEY }}
          passphrase: ${{ secrets.DROPLET_PASSPHRASE }}
          port: 22
          script_stop: true
          script: |
            echo -e "$ENV" > .env
            docker-compose pull -q
            docker-compose down --remove-orphans
            docker-compose up -d

      - name: Send Discord Announcement
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          username: "Deployment Notifier"
          message: '@everyone Updated Staging (https://${{ secrets.STAGING_DOMAIN }}): ${{ github.event.head_commit.message }}${{ github.event.inputs.message }}'
