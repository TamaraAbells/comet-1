name: "Build & Deploy"

on:
  workflow_dispatch:
    inputs:
      environment:
        required: false
        description: "\"prod\" or \"staging\""
        default: "staging"

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Build container image
        run: docker buildx build ./frontend -t registry.digitalocean.com/cometx/frontend:${{ github.event.inputs.environment }}

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/cometx/frontend

  api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Build container image
        run: docker buildx build ./api -t registry.digitalocean.com/cometx/api:${{ github.event.inputs.environment }}

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/cometx/api

  nginx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master

      - name: Copy SSL certs
        run: 'echo -e "$SSL_CERT" > ./nginx/cert.pem && echo -e "$SSL_KEY" > ./nginx/key.pem'
        shell: bash
        env:
          SSL_CERT: ${{ secrets.SSL_CERT }}
          SSL_KEY: ${{ secrets.SSL_KEY }}

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Build container image
        run: docker buildx build ./nginx -t registry.digitalocean.com/cometx/nginx:latest

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/cometx/nginx

  deploy:
    needs: [frontend, api, nginx]
    runs-on: ubuntu-latest
    steps:
      - uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: ${{ github.event.inputs.environment }}
          token: ${{ secrets.WORKFLOW_PAT }}
          inputs: '{ "message": "${{ github.event.head_commit.message }}" }'
