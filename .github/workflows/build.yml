name: Build

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  server:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prep
        run: echo ::set-output name=tag::joincomet/server:${GITHUB_REF#refs/tags/}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: server/Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tag }},joincomet/server:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn
      - run: yarn run build:web
        env:
          VITE_API_DOMAIN: ${{ secrets.API_DOMAIN }}
          VITE_SENTRY_DSN: ${{ secrets.WEB_SENTRY_DSN }}
          VITE_BTC_ADDRESS: ${{ secrets.BTC_ADDRESS }}
          VITE_ETH_ADDRESS: ${{ secrets.ETH_ADDRESS }}
          VITE_TENOR_API_KEY: ${{ secrets.TENOR_API_KEY }}
      - uses: actions/upload-artifact@v2
        with:
          name: dist-web
          path: web/dist/

  deploy:
    needs: [web, server]
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prep
        run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Update deployment file tags
        run: |
          TAG=${{ steps.prep.outputs.tag }}
          ACCESS_TOKEN_SECRET=$(printf '%s\n' "${{ secrets.ACCESS_TOKEN_SECRET }}" | sed -e 's/[]\/$*.^[]/\\&/g');
          AWS_SECRET_ACCESS_KEY=$(printf '%s\n' "${{ secrets.AWS_SECRET_ACCESS_KEY }}" | sed -e 's/[]\/$*.^[]/\\&/g');
          SENTRY_DSN=$(printf '%s\n' "${{ secrets.SERVER_SENTRY_DSN }}" | sed -e 's/[]\/$*.^[]/\\&/g');
          COMET_USER_PASSWORD=$(printf '%s\n' "${{ secrets.COMET_USER_PASSWORD }}" | sed -e 's/[]\/$*.^[]/\\&/g');
          sed -i "s/<TAG>/$TAG/g" .do/app.yaml
          sed -i "s/<ACCESS_TOKEN_SECRET>/$ACCESS_TOKEN_SECRET/g" .do/app.yaml
          sed -i "s/<BUCKET>/${{ secrets.BUCKET }}/g" .do/app.yaml
          sed -i "s/<AWS_ACCESS_KEY_ID>/${{ secrets.AWS_ACCESS_KEY_ID }}/g" .do/app.yaml
          sed -i "s/<AWS_SECRET_ACCESS_KEY>/$AWS_SECRET_ACCESS_KEY/g" .do/app.yaml
          sed -i "s/<AWS_ENDPOINT>/${{ secrets.AWS_ENDPOINT }}/g" .do/app.yaml
          sed -i "s/<MEDIA_DOMAIN>/${{ secrets.MEDIA_DOMAIN }}/g" .do/app.yaml
          sed -i "s/<SENTRY_DSN>/$SENTRY_DSN/g" .do/app.yaml
          sed -i "s/<COMET_USER_PASSWORD>/$COMET_USER_PASSWORD/g" .do/app.yaml
      - name: Update app spec
        run: doctl apps update ${{ secrets.DIGITALOCEAN_APP_ID }} --spec .do/app.yaml

  pages:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist-web
          path: web/dist
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.2
        with:
          branch: gh-pages
          folder: web/dist
          clean: true
          clean-exclude: |
            404.html
