name: Update Production

on:
  workflow_dispatch:
    inputs:
      message:
        description: Discord announcement message
        required: true

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master
      - name: Build container image
        run: docker buildx build ./frontend -t registry.digitalocean.com/cometx/frontend:prod
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/cometx/frontend
   api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master
      - name: Build container image
        run: docker buildx build ./api -t registry.digitalocean.com/cometx/api:prod
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/cometx/api
   nginx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@master
      - name: Copy SSL certs
        run: 'echo -e "$SSL_CERT" > ./nginx/cert.pem && echo -e "$SSL_KEY" > ./nginx/key.pem'
        shell: bash
        env:
          SSL_CERT: ${{ secrets.SSL_CERT }}
          SSL_KEY: ${{ secrets.SSL_KEY }}
      - name: Build container image
        run: docker buildx build ./nginx -t registry.digitalocean.com/cometx/nginx:latest
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/cometx/nginx
  deploy:
    needs: [frontend, api, nginx]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
      - name: Copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          key: ${{ secrets.DROPLET_KEY }}
          passphrase: ${{ secrets.DROPLET_PASSPHRASE }}
          port: 22
          source: "docker-compose.prod.yml"
          target: ${{ github.event.repository.name }}
      - name: Start containers
        uses: appleboy/ssh-action@master
        env:
          ENV: ${{ secrets.ENV }}
          REPOSITORY: ${{ github.event.repository.name }}
        with:
          envs: ENV,REPOSITORY
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          key: ${{ secrets.DROPLET_KEY }}
          passphrase: ${{ secrets.DROPLET_PASSPHRASE }}
          port: 22
          script: |
            cd $REPOSITORY
            echo -e "$ENV" > .env
            mv docker-compose.prod.yml docker-compose.yml
            docker system prune -f
            docker-compose pull -q
            docker-compose rm -fs nginx
            docker-compose rm -fs frontend
            docker-compose rm -fs api
            docker-compose up -d --no-deps --remove-orphans api
            docker-compose up -d --no-deps frontend
            docker-compose up -d --no-deps nginx
      - name: Send Discord Announcement
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          username: "Deployment Notifier"
          message: '@everyone production has been updated: "${{ github.event.inputs.message }}"'
