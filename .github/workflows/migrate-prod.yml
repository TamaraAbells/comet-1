name: Migrate Production

on:
  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
      - name: Copy migration script
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          key: ${{ secrets.DROPLET_KEY }}
          passphrase: ${{ secrets.DROPLET_PASSPHRASE }}
          port: 22
          source: "./api/src/migrations/migration.sql"
          target: ${{ github.event.repository.name }}
      - name: Start containers
        uses: appleboy/ssh-action@master
        env:
          REPOSITORY: ${{ github.event.repository.name }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        with:
          envs: REPOSITORY, DATABASE_URL, DATABASE_NAME
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          key: ${{ secrets.DROPLET_KEY }}
          passphrase: ${{ secrets.DROPLET_PASSPHRASE }}
          port: 22
          script: |
            cd $REPOSITORY
            doctl databases db delete $DATABASE_NAME
            doctl databases db create $DATABASE_NAME
            pg_restore --verbose --clean --no-acl --no-owner -d ${DATABASE_URL}/${DATABASE_NAME}?sslmode=require ./latest.dump
            psql -d ${DATABASE_URL}/${DATABASE_NAME}?sslmode=require -f ./migration.sql
            docker run --env-file ./prod.env registry.digitalocean.com/cometx/api:prod "yarn run migrate"
