name: Migrate Staging

on:
  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout staging
        uses: actions/checkout@v2
        with:
          ref: staging

      - name: Copy migration script
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.STAGING_DROPLET_HOST }}
          username: root
          key: ${{ secrets.DROPLET_KEY }}
          passphrase: ${{ secrets.DROPLET_PASSPHRASE }}
          port: 22
          source: "api/src/migrations/from-getcomet/migration.sql"
          target: .
          strip_components: 4

      - name: Run migration
        uses: appleboy/ssh-action@master
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_NAME: ${{ secrets.STAGING_DATABASE_NAME }}
          ENV: "-e DATABASE_URL=${{ secrets.DATABASE_URL }} -e DATABASE_NAME=${{ secrets.STAGING_DATABASE_NAME }} -e BUCKET=${{ secrets.STAGING_BUCKET }} -e MEDIA_DOMAIN=${{ secrets.STAGING_MEDIA_DOMAIN }} -e AWS_ENDPOINT=${{ secrets.AWS_ENDPOINT }} -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        with:
          envs: DATABASE_URL, DATABASE_NAME, ENV
          host: ${{ secrets.DROPLET_HOST }}
          username: root
          key: ${{ secrets.DROPLET_KEY }}
          passphrase: ${{ secrets.DROPLET_PASSPHRASE }}
          port: 22
          command_timeout: 200m
          script_stop: true
          script: |
            doctl databases db delete -f 4b0712e1-e8b9-415d-be5e-aa9e081d4072 $DATABASE_NAME
            doctl databases db create 4b0712e1-e8b9-415d-be5e-aa9e081d4072 $DATABASE_NAME
            pg_restore --verbose --clean --no-acl --no-owner -d ${DATABASE_URL}/${DATABASE_NAME}?sslmode=require latest.dump
            psql -d ${DATABASE_URL}/${DATABASE_NAME}?sslmode=require -f migration.sql
            docker exec ${ENV} api yarn workspace api run migrate
